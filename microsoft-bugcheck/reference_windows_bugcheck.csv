0x00000001,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1--apc-index-mismatch,APC_INDEX_MISMATCH,The APC_INDEX_MISMATCH bug check has a value of 0x00000001. This indicates that there has been a mismatch in the asynchronous procedure calls (APC) state index.
0x00000002,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x2--device-queue-not-busy,DEVICE_QUEUE_NOT_BUSY,The DEVICE_QUEUE_NOT_BUSY bug check has a value of 0x00000002.
0x00000003,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x3--invalid-affinity-set,INVALID_AFFINITY_SET,The INVALID_AFFINITY_SET bug check has a value of 0x00000003.
0x00000004,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x4--invalid-data-access-trap,INVALID_DATA_ACCESS_TRAP,The INVALID_DATA_ACCESS_TRAP bug check has a value of 0x00000004. It indicates an incorrect data access trap.
0x00000005,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x5--invalid-process-attach-attempt,INVALID_PROCESS_ATTACH_ATTEMPT,"The INVALID_PROCESS_ATTACH_ATTEMPT bug check has a value of 0x00000005. This generally indicates that the thread was attached to a process in a situation where that is not allowed. For example, this bug check could occur if <strong>KeAttachProcess</strong> was called when the thread was already attached to a process (which is illegal), or if the thread returned from certain function calls in an attached state (which is invalid),"
0x00000006,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x6--invalid-process-detach-attempt,INVALID_PROCESS_DETACH_ATTEMPT,The INVALID_PROCESS_DETACH_ATTEMPT bug check has a value of 0x00000006.
0x00000007,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x7--invalid-software-interrupt,INVALID_SOFTWARE_INTERRUPT,The INVALID_SOFTWARE_INTERRUPT bug check has a value of 0x00000007.
0x00000008,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x8--irql-not-dispatch-level,IRQL_NOT_DISPATCH_LEVEL,The IRQL_NOT_DISPATCH_LEVEL bug check has a value of 0x00000008.
0x00000009,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x9--irql-not-greater-or-equal,IRQL_NOT_GREATER_OR_EQUAL,The IRQL_NOT_GREATER_OR_EQUAL bug check has a value of 0x00000009.
0x0000000A,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xa--irql-not-less-or-equal,IRQL_NOT_LESS_OR_EQUAL,The IRQL_NOT_LESS_OR_EQUAL bug check has a value of 0x0000000A. This indicates that Microsoft Windows or a kernel-mode driver accessed paged memory at an invalid address while at a raised interrupt request level (IRQL). This is typically the result of either a bad pointer or a pageability problem.
0x0000000B,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xb--no-exception-handling-support,NO_EXCEPTION_HANDLING_SUPPORT,The NO_EXCEPTION_HANDLING_SUPPORT bug check has a value of 0x0000000B.
0x0000000C,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xc--maximum-wait-objects-exceeded,MAXIMUM_WAIT_OBJECTS_EXCEEDED,The MAXIMUM_WAIT_OBJECTS_EXCEEDED bug check has a value of 0x0000000C. This indicates that the current thread exceeded the permitted number of wait objects.
0x0000000D,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xd--mutex-level-number-violation,MUTEX_LEVEL_NUMBER_VIOLATION,The MUTEX_LEVEL_NUMBER_VIOLATION bug check has a value of 0x0000000D.
0x0000000E,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xe--no-user-mode-context,NO_USER_MODE_CONTEXT,The NO_USER_MODE_CONTEXT bug check has a value of 0x0000000E.
0x0000000F,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xf--spin-lock-already-owned,SPIN_LOCK_ALREADY_OWNED,The SPIN_LOCK_ALREADY_OWNED bug check has a value of 0x0000000F. This indicates that a request for a spin lock has been initiated when the spin lock was already owned.
0x00000010,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x10--spin-lock-not-owned,SPIN_LOCK_NOT_OWNED,The SPIN_LOCK_NOT_OWNED bug check has a value of 0x00000010.
0x00000011,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x11--thread-not-mutex-owner,THREAD_NOT_MUTEX_OWNER,The THREAD_NOT_MUTEX_OWNER bug check has a value of 0x00000011.
0x00000012,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x12--trap-cause-unknown,TRAP_CAUSE_UNKNOWN,The TRAP_CAUSE_UNKNOWN bug check has a value of 0x00000012. This indicates that an unknown exception has occurred.
0x00000013,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x13--empty-thread-reaper-list,EMPTY_THREAD_REAPER_LIST,The EMPTY_THREAD_REAPER_LIST bug check has a value of 0x00000013.
0x00000014,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x14--create-delete-lock-not-locked,CREATE_DELETE_LOCK_NOT_LOCKED,The CREATE_DELETE_LOCK_NOT_LOCKED bug check has a value of 0x00000014.
0x00000015,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x15--last-chance-called-from-kmode,LAST_CHANCE_CALLED_FROM_KMODE,The LAST_CHANCE_CALLED_FROM_KMODE bug check has a value of 0x00000015.
0x00000016,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x16--cid-handle-creation,CID_HANDLE_CREATION,The CID_HANDLE_CREATION bug check has a value of 0x00000016.
0x00000017,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x17--cid-handle-deletion,CID_HANDLE_DELETION,The CID_HANDLE_DELETION bug check has a value of 0x00000017.
0x00000018,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x18--reference-by-pointer,REFERENCE_BY_POINTER,The REFERENCE_BY_POINTER bug check has a value of 0x00000018. This indicates that the reference count of an object is illegal for the current state of the object.
0x00000019,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x19--bad-pool-header,BAD_POOL_HEADER,The BAD_POOL_HEADER bug check has a value of 0x00000019. This indicates that a pool header is corrupt.
0x0000001A,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1a--memory-management,MEMORY_MANAGEMENT,The MEMORY_MANAGEMENT bug check has a value of 0x0000001A. This indicates that a severe memory management error occurred.
0x0000001B,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1b--pfn-share-count,PFN_SHARE_COUNT,The PFN_SHARE_COUNT bug check has a value of 0x0000001B.
0x0000001C,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1c--pfn-reference-count,PFN_REFERENCE_COUNT,The PFN_REFERENCE_COUNT bug check has a value of 0x0000001C.
0x0000001D,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1d--no-spin-lock-available,NO_SPIN_LOCK_AVAILABLE,The NO_SPIN_LOCK_AVAILABLE bug check has a value of 0x0000001D.
0x0000001E,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1e--kmode-exception-not-handled,KMODE_EXCEPTION_NOT_HANDLED,The KMODE_EXCEPTION_NOT_HANDLED bug check has a value of 0x0000001E. This indicates that a kernel-mode program generated an exception that the error handler did not catch.
0x0000001F,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1f--shared-resource-conv-error,SHARED_RESOURCE_CONV_ERROR,The SHARED_RESOURCE_CONV_ERROR bug check has a value of 0x0000001F.
0x00000020,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x20--kernel-apc-pending-during-exit,KERNEL_APC_PENDING_DURING_EXIT,The KERNEL_APC_PENDING_DURING_EXIT bug check has a value of 0x00000020. This indicates that an asynchronous procedure call (APC) was still pending when a thread exited.
0x00000021,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x21--quota-underflow,QUOTA_UNDERFLOW,The QUOTA_UNDERFLOW bug check has a value of 0x00000021. This indicates that quota charges have been mishandled by returning more quota to a particular block than was previously charged.
0x00000022,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x22--file-system,FILE_SYSTEM,The FILE_SYSTEM bug check has a value of 0x00000022.
0x00000023,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x23--fat-file-system,FAT_FILE_SYSTEM,The FAT_FILE_SYSTEM bug check has a value of 0x00000023. This indicates that a problem occurred in the FAT file system.
0x00000024,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x24--ntfs-file-system,NTFS_FILE_SYSTEM,"The NTFS_FILE_SYSTEM bug check has a value of 0x00000024. This indicates a problem occurred in ntfs.sys, the driver file that allows the system to read and write to NTFS drives."
0x00000025,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x25--npfs-file-system,NPFS_FILE_SYSTEM,The NPFS_FILE_SYSTEM bug check has a value of 0x00000025. This indicates that a problem occurred in the NPFS file system.
0x00000026,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x26--cdfs-file-system,CDFS_FILE_SYSTEM,The CDFS_FILE_SYSTEM bug check has a value of 0x00000026. This indicates that a problem occurred in the CD file system.
0x00000027,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x27--rdr-file-system,RDR_FILE_SYSTEM,The RDR_FILE_SYSTEM bug check has a value of 0x00000027. This indicates that a problem occurred in the SMB redirector file system.
0x00000028,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x28--corrupt-access-token,CORRUPT_ACCESS_TOKEN,The CORRUPT_ACCESS_TOKEN bug check has a value of 0x00000028.
0x00000029,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x29--security-system,SECURITY_SYSTEM,The SECURITY_SYSTEM bug check has a value of 0x00000029.
0x0000002A,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x2a--inconsistent-irp,INCONSISTENT_IRP,The INCONSISTENT_IRP bug check has a value of 0x0000002A. This indicates that an IRP was found to contain inconsistent information.
0x0000002B,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x2b--panic-stack-switch,PANIC_STACK_SWITCH,The PANIC_STACK_SWITCH bug check has a value of 0x0000002B. This indicates that the kernel mode stack was overrun.
0x0000002C,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x2c--port-driver-internal,PORT_DRIVER_INTERNAL,The PORT_DRIVER_INTERNAL bug check has a value of 0x0000002C.
0x0000002D,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x2d--scsi-disk-driver-internal,SCSI_DISK_DRIVER_INTERNAL,The SCSI_DISK_DRIVER_INTERNAL bug check has a value of 0x0000002D.
0x0000002E,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x2e--data-bus-error,DATA_BUS_ERROR,The DATA_BUS_ERROR bug check has a value of 0x0000002E. This typically indicates that a parity error in system memory has been detected.
0x0000002F,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x2f--instruction-bus-error,INSTRUCTION_BUS_ERROR,The INSTRUCTION_BUS_ERROR bug check has a value of 0x0000002F.
0x00000030,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x30--set-of-invalid-context,SET_OF_INVALID_CONTEXT,The SET_OF_INVALID_CONTEXT bug check has a value of 0x00000030. This indicates that the stack pointer in a trap frame had an invalid value.
0x00000031,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x31--phase0-initialization-failed,PHASE0_INITIALIZATION_FAILED,The PHASE0_INITIALIZATION_FAILED bug check has a value of 0x00000031. This indicates that system initialization failed.
0x00000032,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x32--phase1-initialization-failed,PHASE1_INITIALIZATION_FAILED,The PHASE1_INITIALIZATION_FAILED bug check has a value of 0x00000032. This indicates that system initialization failed.
0x00000033,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x33--unexpected-initialization-call,UNEXPECTED_INITIALIZATION_CALL,The UNEXPECTED_INITIALIZATION_CALL bug check has a value of 0x00000033.
0x00000034,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x34--cache-manager,CACHE_MANAGER,The CACHE_MANAGER bug check has a value of 0x00000034. This indicates that a problem occurred in the file system's cache manager.
0x00000035,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x35--no-more-irp-stack-locations,NO_MORE_IRP_STACK_LOCATIONS,The NO_MORE_IRP_STACK_LOCATIONS bug check has a value of 0x00000035. This bug check occurs when the <strong>IoCallDriver</strong> packet has no more stack locations remaining.
0x00000036,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x36--device-reference-count-not-zero,DEVICE_REFERENCE_COUNT_NOT_ZERO,The DEVICE_REFERENCE_COUNT_NOT_ZERO bug check has a value of 0x00000036. This indicates that a driver attempted to delete a device object that still had a positive reference count.
0x00000037,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x37--floppy-internal-error,FLOPPY_INTERNAL_ERROR,The FLOPPY_INTERNAL_ERROR bug check has a value of 0x00000037.
0x00000038,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x38--serial-driver-internal,SERIAL_DRIVER_INTERNAL,The SERIAL_DRIVER_INTERNAL bug check has a value of 0x00000038.
0x00000039,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x39--system-exit-owned-mutex,SYSTEM_EXIT_OWNED_MUTEX,The SYSTEM_EXIT_OWNED_MUTEX bug check has a value of 0x00000039. This indicates that the worker routine returned without releasing the mutex object that it owned.
0x0000003A,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x3a--system-unwind-previous-user,SYSTEM_UNWIND_PREVIOUS_USER,The SYSTEM_UNWIND_PREVIOUS_USER bug check has a value of 0x0000003A.
0x0000003B,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x3b--system-service-exception,SYSTEM_SERVICE_EXCEPTION,The SYSTEM_SERVICE_EXCEPTION bug check has a value of 0x0000003B. This indicates that an exception happened while executing a routine that transitions from non-privileged code to privileged code.
0x0000003C,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x3c--interrupt-unwind-attempted,INTERRUPT_UNWIND_ATTEMPTED,The INTERRUPT_UNWIND_ATTEMPTED bug check has a value of 0x0000003C.
0x0000003D,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x3d--interrupt-exception-not-handled,INTERRUPT_EXCEPTION_NOT_HANDLED,The INTERRUPT_EXCEPTION_NOT_HANDLED bug check has a value of 0x0000003D.
0x0000003E,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x3e--multiprocessor-configuration-not-supported,MULTIPROCESSOR_CONFIGURATION_NOT_SUPPORTED,"The MULTIPROCESSOR_CONFIGURATION_NOT_SUPPORTED bug check has a value of 0x0000003E. This indicates that the system has multiple processors, but they are asymmetric in relation to one another."
0x0000003F,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x3f--no-more-system-ptes,NO_MORE_SYSTEM_PTES,The NO_MORE_SYSTEM_PTES bug check has a value of 0x0000003F. This is the result of a system which has performed too many I/O actions. This has resulted in fragmented system page table entries (PTE).
0x00000040,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x40--target-mdl-too-small,TARGET_MDL_TOO_SMALL,The TARGET_MDL_TOO_SMALL bug check has a value of 0x00000040. This indicates that a driver has improperly used <strong>IoBuildPartialMdl</strong>.
0x00000041,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x41--must-succeed-pool-empty,MUST_SUCCEED_POOL_EMPTY,The MUST_SUCCEED_POOL_EMPTY bug check has a value of 0x00000041. This indicates that a kernel-mode thread has requested too much must-succeed pool.
0x00000042,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x42--atdisk-driver-internal,ATDISK_DRIVER_INTERNAL,The ATDISK_DRIVER_INTERNAL bug check has a value of 0x00000042.
0x00000043,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x43--no-such-partition,NO_SUCH_PARTITION,The NO_SUCH_PARTITION bug check has a value of 0x00000043.
0x00000044,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x44--multiple-irp-complete-requests,MULTIPLE_IRP_COMPLETE_REQUESTS,The MULTIPLE_IRP_COMPLETE_REQUESTS bug check has a value of 0x00000044. This indicates that a driver has tried to request an IRP be completed that is already complete.
0x00000045,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x45--insufficient-system-map-regs,INSUFFICIENT_SYSTEM_MAP_REGS,The INSUFFICIENT_SYSTEM_MAP_REGS bug check has a value of 0x00000045.
0x00000046,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x46--deref-unknown-logon-session,DEREF_UNKNOWN_LOGON_SESSION,The DEREF_UNKNOWN_LOGON_SESSION bug check has a value of 0x00000046.
0x00000047,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x47--ref-unknown-logon-session,REF_UNKNOWN_LOGON_SESSION,The REF_UNKNOWN_LOGON_SESSION bug check has a value of 0x00000047.
0x00000048,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x48--cancel-state-in-completed-irp,CANCEL_STATE_IN_COMPLETED_IRP,"The CANCEL_STATE_IN_COMPLETED_IRP bug check has a value of 0x00000048. This indicates that an I/O request packet (IRP) was completed, and then was subsequently canceled."
0x00000049,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x49--page-fault-with-interrupts-off,PAGE_FAULT_WITH_INTERRUPTS_OFF,The PAGE_FAULT_WITH_INTERRUPTS_OFF bug check has a value of 0x00000049.
0x0000004A,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x4a--irql-gt-zero-at-system-service,IRQL_GT_ZERO_AT_SYSTEM_SERVICE,The IRQL_GT_ZERO_AT_SYSTEM_SERVICE bug check has a value of 0x0000004A. This indicates that a thread is returning to user mode from a system call when its IRQL is still above PASSIVE_LEVEL.
0x0000004B,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x4b--streams-internal-error,STREAMS_INTERNAL_ERROR,The STREAMS_INTERNAL_ERROR bug check has a value of 0x0000004B.
0x0000004C,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x4c--fatal-unhandled-hard-error,FATAL_UNHANDLED_HARD_ERROR,The FATAL_UNHANDLED_HARD_ERROR bug check has a value of 0x0000004C.
0x0000004D,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x4d--no-pages-available,NO_PAGES_AVAILABLE,The NO_PAGES_AVAILABLE bug check has a value of 0x0000004D. This indicates that no free pages are available to continue operations.
0x0000004E,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x4e--pfn-list-corrupt,PFN_LIST_CORRUPT,The PFN_LIST_CORRUPT bug check has a value of 0x0000004E. This indicates that the page frame number (PFN) list is corrupted.
0x0000004F,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x4f--ndis-internal-error,NDIS_INTERNAL_ERROR,The NDIS_INTERNAL_ERROR bug check has a value of 0x0000004F.
0x00000050,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x50--page-fault-in-nonpaged-area,PAGE_FAULT_IN_NONPAGED_AREA,The PAGE_FAULT_IN_NONPAGED_AREA bug check has a value of 0x00000050. This indicates that invalid system memory has been referenced. Typically the memory address is wrong or the memory address is pointing at freed memory.
0x00000051,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x51--registry-error,REGISTRY_ERROR,The REGISTRY_ERROR bug check has a value of 0x00000051. This indicates that a severe registry error has occurred.
0x00000052,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x52--mailslot-file-system,MAILSLOT_FILE_SYSTEM,The MAILSLOT_FILE_SYSTEM bug check has a value of 0x00000052.
0x00000053,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x53--no-boot-device,NO_BOOT_DEVICE,The NO_BOOT_DEVICE bug check has a value of 0x00000053.
0x00000054,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x54--lm-server-internal-error,LM_SERVER_INTERNAL_ERROR,The LM_SERVER_INTERNAL_ERROR bug check has a value of 0x00000054.
0x00000055,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x55--data-coherency-exception,DATA_COHERENCY_EXCEPTION,The DATA_COHERENCY_EXCEPTION bug check has a value of 0x00000055.
0x00000056,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x56--instruction-coherency-exception,INSTRUCTION_COHERENCY_EXCEPTION,The INSTRUCTION_COHERENCY_EXCEPTION bug check has a value of 0x00000056.
0x00000057,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x57--xns-internal-error,XNS_INTERNAL_ERROR,The XNS_INTERNAL_ERROR bug check has a value of 0x00000057.
0x00000058,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x58--ftdisk-internal-error,FTDISK_INTERNAL_ERROR,The FTDISK_INTERNAL_ERROR bug check has a value of 0x00000058. This is issued if the system is booted from the wrong copy of a mirrored partition.
0x00000059,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x59--pinball-file-system,PINBALL_FILE_SYSTEM,The PINBALL_FILE_SYSTEM bug check has a value of 0x00000059. This indicates that a problem occurred in the Pinball file system.
0x0000005A,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x5a--critical-service-failed,CRITICAL_SERVICE_FAILED,The CRITICAL_SERVICE_FAILED bug check has a value of 0x0000005A.
0x0000005B,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x5b--set-env-var-failed,SET_ENV_VAR_FAILED,The SET_ENV_VAR_FAILED bug check has a value of 0x0000005B.
0x0000005C,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x5c--hal-initialization-failed,HAL_INITIALIZATION_FAILED,The HAL_INITIALIZATION_FAILED bug check has a value of 0x0000005C.
0x0000005D,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x5d--unsupported-processor,UNSUPPORTED_PROCESSOR,The UNSUPPORTED_PROCESSOR bug check has a value of 0x0000005D. This indicates that the computer is attempting to run Windows on an unsupported processor.
0x0000005E,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x5e--object-initialization-failed,OBJECT_INITIALIZATION_FAILED,The OBJECT_INITIALIZATION_FAILED bug check has a value of 0x0000005E.
0x0000005F,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x5f--security-initialization-failed,SECURITY_INITIALIZATION_FAILED,The SECURITY_INITIALIZATION_FAILED bug check has a value of 0x0000005F.
0x00000060,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x60--process-initialization-failed,PROCESS_INITIALIZATION_FAILED,The PROCESS_INITIALIZATION_FAILED bug check has a value of 0x00000060.
0x00000061,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x61--hal1-initialization-failed,HAL1_INITIALIZATION_FAILED,The HAL1_INITIALIZATION_FAILED bug check has a value of 0x00000061.
0x00000062,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x62--object1-initialization-failed,OBJECT1_INITIALIZATION_FAILED,The OBJECT1_INITIALIZATION_FAILED bug check has a value of 0x00000062.
0x00000063,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x63--security1-initialization-failed,SECURITY1_INITIALIZATION_FAILED,The SECURITY1_INITIALIZATION_FAILED bug check has a value of 0x00000063.
0x00000064,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x64--symbolic-initialization-failed,SYMBOLIC_INITIALIZATION_FAILED,The SYMBOLIC_INITIALIZATION_FAILED bug check has a value of 0x00000064.
0x00000065,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x65--memory1-initialization-failed,MEMORY1_INITIALIZATION_FAILED,The MEMORY1_INITIALIZATION_FAILED bug check has a value of 0x00000065.
0x00000066,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x66--cache-initialization-failed,CACHE_INITIALIZATION_FAILED,The CACHE_INITIALIZATION_FAILED bug check has a value of 0x00000066.
0x00000067,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x67--config-initialization-failed,CONFIG_INITIALIZATION_FAILED,The CONFIG_INITIALIZATION_FAILED bug check has a value of 0x00000067. This bug check indicates that the registry configuration failed.
0x00000068,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x68--file-initialization-failed,FILE_INITIALIZATION_FAILED,The FILE_INITIALIZATION_FAILED bug check has a value of 0x00000068.
0x00000069,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x69--io1-initialization-failed,IO1_INITIALIZATION_FAILED,The IO1_INITIALIZATION_FAILED bug check has a value of 0x00000069. This bug check indicates that the initialization of the I/O system failed for some reason.
0x0000006A,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x6a--lpc-initialization-failed,LPC_INITIALIZATION_FAILED,The LPC_INITIALIZATION_FAILED bug check has a value of 0x0000006A.
0x0000006B,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x6b--process1-initialization-failed,PROCESS1_INITIALIZATION_FAILED,The PROCESS1_INITIALIZATION_FAILED bug check has a value of 0x0000006B. This bug check indicates that the initialization of the Microsoft Windows operating system failed.
0x0000006C,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x6c--refmon-initialization-failed,REFMON_INITIALIZATION_FAILED,The REFMON_INITIALIZATION_FAILED bug check has a value of 0x0000006C.
0x0000006D,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x6d--session1-initialization-failed,SESSION1_INITIALIZATION_FAILED,The SESSION1_INITIALIZATION_FAILED bug check has a value of 0x0000006D. This bug check indicates that the initialization of the Microsoft Windows operating system failed.
0x0000006E,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x6e--session2-initialization-failed,SESSION2_INITIALIZATION_FAILED,The SESSION2_INITIALIZATION_FAILED bug check has a value of 0x0000006E. This bug check indicates that the initialization of the Microsoft Windows operating system failed.
0x0000006F,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x6f--session3-initialization-failed,SESSION3_INITIALIZATION_FAILED,The SESSION3_INITIALIZATION_FAILED bug check has a value of 0x0000006F. This bug check indicates that the initialization of the Microsoft Windows operating system failed.
0x00000070,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x70--session4-initialization-failed,SESSION4_INITIALIZATION_FAILED,The SESSION4_INITIALIZATION_FAILED bug check has a value of 0x00000070. This bug check indicates that the initialization of the Microsoft Windows operating system failed.
0x00000071,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x71--session5-initialization-failed,SESSION5_INITIALIZATION_FAILED,The SESSION5_INITIALIZATION_FAILED bug check has a value of 0x00000071. This bug check indicates that the initialization of the Microsoft Windows operating system failed.
0x00000072,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x72--assign-drive-letters-failed,ASSIGN_DRIVE_LETTERS_FAILED,The ASSIGN_DRIVE_LETTERS_FAILED bug check has a value of 0x00000072.
0x00000073,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x73--config-list-failed,CONFIG_LIST_FAILED,"The CONFIG_LIST_FAILED bug check has a value of 0x00000073. This bug check indicates that one of the top-level registry keys, also known as core system hives, cannot be linked in the registry tree."
0x00000074,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x74--bad-system-config-info,BAD_SYSTEM_CONFIG_INFO,The BAD_SYSTEM_CONFIG_INFO bug check has a value of 0x00000074. This bug check indicates that there is an error in the registry.
0x00000075,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x75--cannot-write-configuration,CANNOT_WRITE_CONFIGURATION,The CANNOT_WRITE_CONFIGURATION bug check has a value of 0x00000075. This bug check indicates that the SYSTEM registry hive file cannot be converted to a mapped file.
0x00000076,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x76--process-has-locked-pages,PROCESS_HAS_LOCKED_PAGES,"The PROCESS_HAS_LOCKED_PAGES bug check has a value of 0x00000076. This bug check indicates that a driver failed to release locked pages after an I/O operation, or that it attempted to unlock pages that were already unlocked."
0x00000077,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x77--kernel-stack-inpage-error,KERNEL_STACK_INPAGE_ERROR,The KERNEL_STACK_INPAGE_ERROR bug check has a value of 0x00000077. This bug check indicates that the requested page of kernel data from the paging file could not be read into memory.
0x00000078,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x78--phase0-exception,PHASE0_EXCEPTION,The PHASE0_EXCEPTION bug check has a value of 0x00000078.
0x00000079,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x79--mismatched-hal,MISMATCHED_HAL,The MISMATCHED_HAL bug check has a value of 0x00000079. This bug check indicates that the Hardware Abstraction Layer (HAL) revision level or configuration does not match that of the kernel or the computer.
0x0000007A,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x7a--kernel-data-inpage-error,KERNEL_DATA_INPAGE_ERROR,The KERNEL_DATA_INPAGE_ERROR bug check has a value of 0x0000007A. This bug check indicates that the requested page of kernel data from the paging file could not be read into memory.
0x0000007B,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x7b--inaccessible-boot-device,INACCESSIBLE_BOOT_DEVICE,The INACCESSIBLE_BOOT_DEVICE bug check has a value of 0x0000007B. This bug check indicates that the Microsoft Windows operating system has lost access to the system partition during startup.
0x0000007C,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x7c--bugcode-ndis-driver,BUGCODE_NDIS_DRIVER,The BUGCODE_NDIS_DRIVER bug check has a value of 0x0000007C. This bug check indicates that the operating system detected an error in a networking driver.
0x0000007D,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x7d--install-more-memory,INSTALL_MORE_MEMORY,The INSTALL_MORE_MEMORY bug check has a value of 0x0000007D. This bug check indicates that there is not enough memory to start up the Microsoft Windows operating system.
0x0000007E,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x7e--system-thread-exception-not-handled,SYSTEM_THREAD_EXCEPTION_NOT_HANDLED,The SYSTEM_THREAD_EXCEPTION_NOT_HANDLED bug check has a value of 0x0000007E. This bug check indicates that a system thread generated an exception that the error handler did not catch.
0x0000007F,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x7f--unexpected-kernel-mode-trap,UNEXPECTED_KERNEL_MODE_TRAP,The UNEXPECTED_KERNEL_MODE_TRAP bug check has a value of 0x0000007F. This bug check indicates that the Intel CPU generated a trap and the kernel failed to catch this trap.
0x00000080,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x80--nmi-hardware-failure,NMI_HARDWARE_FAILURE,The NMI_HARDWARE_FAILURE bug check has a value of 0x00000080. This bug check indicates that a hardware malfunction has occurred.
0x00000081,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x81--spin-lock-init-failure,SPIN_LOCK_INIT_FAILURE,The SPIN_LOCK_INIT_FAILURE bug check has a value of 0x00000081.
0x00000082,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x82--dfs-file-system,DFS_FILE_SYSTEM,The DFS_FILE_SYSTEM bug check has a value of 0x00000082.
0x00000085,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x85--setup-failure,SETUP_FAILURE,The SETUP_FAILURE bug check has a value of 0x00000085. This bug check indicates that a fatal error occurred during setup.
0x0000008B,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x8b--mbr-checksum-mismatch,MBR_CHECKSUM_MISMATCH,The MBR_CHECKSUM_MISMATCH bug check has a value of 0x0000008B. This bug check indicates that a mismatch has occurred in the MBR checksum.
0x0000008E,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x8e--kernel-mode-exception-not-handled,KERNEL_MODE_EXCEPTION_NOT_HANDLED,The KERNEL_MODE_EXCEPTION_NOT_HANDLED bug check has a value of 0x0000008E. This bug check indicates that a kernel-mode application generated an exception that the error handler did not catch.
0x0000008F,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x8f--pp0-initialization-failed,PP0_INITIALIZATION_FAILED,The PP0_INITIALIZATION_FAILED bug check has a value of 0x0000008F. This bug check indicates that the Plug and Play (PnP) manager could not be initialized.
0x00000090,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x90--pp1-initialization-failed,PP1_INITIALIZATION_FAILED,The PP1_INITIALIZATION_FAILED bug check has a value of 0x00000090. This bug check indicates that the Plug and Play (PnP) manager could not be initialized.
0x00000092,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x92--up-driver-on-mp-system,UP_DRIVER_ON_MP_SYSTEM,The UP_DRIVER_ON_MP_SYSTEM bug check has a value of 0x00000092. This bug check indicates that a uniprocessor-only driver has been loaded on a multiprocessor system.
0x00000093,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x93--invalid-kernel-handle,INVALID_KERNEL_HANDLE,The INVALID_KERNEL_HANDLE bug check has a value of 0x00000093. This bug check indicates that an invalid or protected handle was passed to <strong>NtClose</strong>.
0x00000094,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x94--kernel-stack-locked-at-exit,KERNEL_STACK_LOCKED_AT_EXIT,The KERNEL_STACK_LOCKED_AT_EXIT bug check has a value of 0x00000094. This bug check indicates that a thread exited while its kernel stack was marked as not swappable
0x00000096,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x96--invalid-work-queue-item,INVALID_WORK_QUEUE_ITEM,The INVALID_WORK_QUEUE_ITEM bug check has a value of 0x00000096. This bug check indicates that a queue entry was removed that contained a <strong>NULL</strong> pointer.
0x00000097,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x97--bound-image-unsupported,BOUND_IMAGE_UNSUPPORTED,The BOUND_IMAGE_UNSUPPORTED bug check has a value of 0x00000097.
0x00000098,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x98--end-of-nt-evaluation-period,END_OF_NT_EVALUATION_PERIOD,The END_OF_NT_EVALUATION_PERIOD bug check has a value of 0x00000098. This bug check indicates that the trial period for the Microsoft Windows operating system has ended.
0x00000099,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x99--invalid-region-or-segment,INVALID_REGION_OR_SEGMENT,The INVALID_REGION_OR_SEGMENT bug check has a value of 0x00000099. This bug check indicates that <strong>ExInitializeRegion</strong> or <strong>ExInterlockedExtendRegion</strong> was called with an invalid set of parameters.
0x0000009A,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x9a--system-license-violation,SYSTEM_LICENSE_VIOLATION,The SYSTEM_LICENSE_VIOLATION bug check has a value of 0x0000009A. This bug check indicates that the software license agreement has been violated.
0x0000009B,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x9b--udfs-file-system,UDFS_FILE_SYSTEM,The UDFS_FILE_SYSTEM bug check has a value of 0x0000009B. This bug check indicates that a problem occurred in the UDF file system.
0x0000009C,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x9c--machine-check-exception,MACHINE_CHECK_EXCEPTION,The MACHINE_CHECK_EXCEPTION bug check has a value of 0x0000009C. This bug check indicates that a fatal machine check exception has occurred.
0x0000009E,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x9e--user-mode-health-monitor,USER_MODE_HEALTH_MONITOR,The USER_MODE_HEALTH_MONITOR bug check has a value of 0x0000009E. This bug check indicates that one or more critical user-mode components failed to satisfy a health check.
0x0000009F,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x9f--driver-power-state-failure,DRIVER_POWER_STATE_FAILURE,The DRIVER_POWER_STATE_FAILURE bug check has a value of 0x0000009F. This bug check indicates that the driver is in an inconsistent or invalid power state.
0x000000A0,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xa0--internal-power-error,INTERNAL_POWER_ERROR,The INTERNAL_POWER_ERROR bug check has a value of 0x000000A0. This bug check indicates that the power policy manager experienced a fatal error.
0x000000A1,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xa1--pci-bus-driver-internal,PCI_BUS_DRIVER_INTERNAL,The PCI_BUS_DRIVER_INTERNAL bug check has a value of 0x000000A1. This bug check indicates that the PCI Bus driver detected inconsistency problems in its internal structures and could not continue.
0x000000A2,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xa2--memory-image-corrupt,MEMORY_IMAGE_CORRUPT,The MEMORY_IMAGE_CORRUPT bug check has a value of 0x000000A2. This bug check indicates that corruption has been detected in the image of an executable file in memory.
0x000000A3,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xa3--acpi-driver-internal,ACPI_DRIVER_INTERNAL,The ACPI_DRIVER_INTERNAL bug check has a value of 0x000000A3. This bug check indicates that the ACPI driver detected an internal inconsistency.
0x000000A4,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xa4--cnss-file-system-filter,CNSS_FILE_SYSTEM_FILTER,The CNSS_FILE_SYSTEM_FILTER bug check has a value of 0x000000A4. This bug check indicates that a problem occurred in the CNSS file system filter.
0x000000A5,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xa5--acpi-bios-error,ACPI_BIOS_ERROR,The ACPI_BIOS_ERROR bug check has a value of 0x000000A5. This bug check indicates that the Advanced Configuration and Power Interface (ACPI) BIOS of the computer is not fully compliant with the ACPI specification.
0x000000A7,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xa7--bad-exhandle,BAD_EXHANDLE,The BAD_EXHANDLE bug check has a value of 0x000000A7. This bug check indicates that the kernel-mode handle table detected an inconsistent handle table entry state.
0x000000AB,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xab--session-has-valid-pool-on-exit,SESSION_HAS_VALID_POOL_ON_EXIT,The SESSION_HAS_VALID_POOL_ON_EXIT bug check has a value of 0x000000AB. This bug check indicates that a session unload occurred while a session driver still held memory.
0x000000AC,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xac--hal-memory-allocation,HAL_MEMORY_ALLOCATION,The HAL_MEMORY_ALLOCATION bug check has a value of 0x000000AC. This bug check indicates that the hardware abstraction layer (HAL) could not obtain sufficient memory.
0x000000AD,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xad--video-driver-debug-report-request,VIDEO_DRIVER_DEBUG_REPORT_REQUEST,The VIDEO_DRIVER_DEBUG_REPORT_REQUEST bug check has a value of 0x000000AD. This bug check indicates that the video port created a non-fatal minidump on behalf of the video driver during run time.
0x000000B1,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xb1--bgi-detected-violation,BGI_DETECTED_VIOLATION,The BGI_DETECTED_VIOLATION bug check has a value of 0x000000B1.
0x000000B4,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xb4--video-driver-init-failure,VIDEO_DRIVER_INIT_FAILURE,The VIDEO_DRIVER_INIT_FAILURE bug check has a value of 0x000000B4. This indicates that Windows was unable to enter graphics mode.
0x000000B8,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xb8--attempted-switch-from-dpc,ATTEMPTED_SWITCH_FROM_DPC,The ATTEMPTED_SWITCH_FROM_DPC bug check has a value of 0x000000B8. This indicates that an illegal operation was attempted by a delayed procedure call (DPC) routine.
0x000000B9,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xb9--chipset-detected-error,CHIPSET_DETECTED_ERROR,The CHIPSET_DETECTED_ERROR bug check has a value of 0x000000B9.
0x000000BA,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xba--session-has-valid-views-on-exit,SESSION_HAS_VALID_VIEWS_ON_EXIT,The SESSION_HAS_VALID_VIEWS_ON_EXIT bug check has a value of 0x000000BA. This indicates that a session driver still had mapped views when the session unloaded.
0x000000BB,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xbb--network-boot-initialization-failed,NETWORK_BOOT_INITIALIZATION_FAILED,The NETWORK_BOOT_INITIALIZATION_FAILED bug check has a value of 0x000000BB. This indicates that Windows failed to successfully boot off a network.
0x000000BC,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xbc--network-boot-duplicate-address,NETWORK_BOOT_DUPLICATE_ADDRESS,The NETWORK_BOOT_DUPLICATE_ADDRESS bug check has a value of 0x000000BC. This indicates that a duplicate IP address was assigned to this machine while booting off a network.
0x000000BD,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xbd--invalid-hibernated-state,INVALID_HIBERNATED_STATE,The INVALID_HIBERNATED_STATE bug check has a value of 0x000000BD. This indicates that the hibernated memory image does not match the current hardware configuration. This bugcheck occurs when a system resumes from hibernate and discovers that the hardware has been changed while the system was hibernated.
0x000000BE,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xbe--attempted-write-to-readonly-memory,ATTEMPTED_WRITE_TO_READONLY_MEMORY,The ATTEMPTED_WRITE_TO_READONLY_MEMORY bug check has a value of 0x000000BE. This is issued if a driver attempts to write to a read-only memory segment.
0x000000BF,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xbf--mutex-already-owned,MUTEX_ALREADY_OWNED,The MUTEX_ALREADY_OWNED bug check has a value of 0x000000BF. This indicates that a thread attempted to acquire ownership of a mutex it already owned.
0x000000C1,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xc1--special-pool-detected-memory-corruption,SPECIAL_POOL_DETECTED_MEMORY_CORRUPTION,The SPECIAL_POOL_DETECTED_MEMORY_CORRUPTION bug check has a value of 0x000000C1. This indicates that the driver wrote to an invalid section of the special pool.
0x000000C2,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xc2--bad-pool-caller,BAD_POOL_CALLER,The BAD_POOL_CALLER bug check has a value of 0x000000C2. This indicates that the current thread is making a bad pool request.
0x000000C4,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xc4--driver-verifier-detected-violation,DRIVER_VERIFIER_DETECTED_VIOLATION,"The DRIVER_VERIFIER_DETECTED_VIOLATION bug check has a value of 0x000000C4. This is the general bug check code for fatal errors found by Driver Verifier. For more information, see <a href=""handling-a-bug-check-when-driver-verifier-is-enabled"" data-linktype=""relative-path"">Handling a Bug Check When Driver Verifier is Enabled</a>."
0x000000C5,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xc5--driver-corrupted-expool,DRIVER_CORRUPTED_EXPOOL,The DRIVER_CORRUPTED_EXPOOL bug check has a value of 0x000000C5. This indicates that the system attempted to access invalid memory at a process IRQL that was too high.
0x000000C6,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xc6--driver-caught-modifying-freed-pool,DRIVER_CAUGHT_MODIFYING_FREED_POOL,The DRIVER_CAUGHT_MODIFYING_FREED_POOL bug check has a value of 0x000000C6. This indicates that the driver attempted to access a freed memory pool.
0x000000C7,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xc7--timer-or-dpc-invalid,TIMER_OR_DPC_INVALID,The TIMER_OR_DPC_INVALID bug check has a value of 0x000000C7. This is issued if a kernel timer or delayed procedure call (DPC) is found somewhere in memory where it is not permitted.
0x000000C8,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xc8--irql-unexpected-value,IRQL_UNEXPECTED_VALUE,The IRQL_UNEXPECTED_VALUE bug check has a value of 0x000000C8. This indicates that the processor's IRQL is not what it should be at this time.
0x000000C9,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xc9--driver-verifier-iomanager-violation,DRIVER_VERIFIER_IOMANAGER_VIOLATION,The DRIVER_VERIFIER_IOMANAGER_VIOLATION bug check has a value of 0x000000C9. This is the bug check code for all Driver Verifier <strong>I/O Verification</strong> violations.
0x000000CA,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xca--pnp-detected-fatal-error,PNP_DETECTED_FATAL_ERROR,"The PNP_DETECTED_FATAL_ERROR bug check has a value of 0x000000CA. This indicates that the Plug and Play Manager encountered a severe error, probably as a result of a problematic Plug and Play driver."
0x000000CB,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xcb--driver-left-locked-pages-in-process,DRIVER_LEFT_LOCKED_PAGES_IN_PROCESS,The DRIVER_LEFT_LOCKED_PAGES_IN_PROCESS bug check has a value of 0x000000CB. This indicates that a driver or the I/O manager failed to release locked pages after an I/O operation.
0x000000CC,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xcc--page-fault-in-freed-special-pool,PAGE_FAULT_IN_FREED_SPECIAL_POOL,The PAGE_FAULT_IN_FREED_SPECIAL_POOL bug check has a value of 0x000000CC. This indicates that the system has referenced memory which was earlier freed.
0x000000CD,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xcd--page-fault-beyond-end-of-allocation,PAGE_FAULT_BEYOND_END_OF_ALLOCATION,The PAGE_FAULT_BEYOND_END_OF_ALLOCATION bug check has a value of 0x000000CD. This indicates that the system accessed memory beyond the end of some driver's pool allocation.
0x000000CE,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xce--driver-unloaded-without-cancelling-pending-operations,DRIVER_UNLOADED_WITHOUT_CANCELLING_PENDING_OPERATIONS,The DRIVER_UNLOADED_WITHOUT_CANCELLING_PENDING_OPERATIONS bug check has a value of 0x000000CE. This indicates that a driver failed to cancel pending operations before unloading.
0x000000CF,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xcf--terminal-server-driver-made-incorrect-memory-reference,TERMINAL_SERVER_DRIVER_MADE_INCORRECT_MEMORY_REFERENCE,The TERMINAL_SERVER_DRIVER_MADE_INCORRECT_MEMORY_REFERENCE bug check has a value of 0x000000CF. This indicates that a driver has been incorrectly ported to the terminal server.
0x000000D0,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xd0--driver-corrupted-mmpool,DRIVER_CORRUPTED_MMPOOL,The DRIVER_CORRUPTED_MMPOOL bug check has a value of 0x000000D0. This indicates that the system attempted to access invalid memory at a process IRQL that was too high.
0x000000D1,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xd1--driver-irql-not-less-or-equal,DRIVER_IRQL_NOT_LESS_OR_EQUAL,The DRIVER_IRQL_NOT_LESS_OR_EQUAL bug check has a value of 0x000000D1. This indicates that a kernel-mode driver attempted to access pageable memory while the process IRQL that was too high.
0x000000D2,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xd2--bugcode-id-driver,BUGCODE_ID_DRIVER,The BUGCODE_ID_DRIVER bug check has a value of 0x000000D2. This indicates that a problem occurred with an NDIS driver.
0x000000D3,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xd3--driver-portion-must-be-nonpaged,DRIVER_PORTION_MUST_BE_NONPAGED,The DRIVER_PORTION_MUST_BE_NONPAGED bug check has a value of 0x000000D3. This indicates that the system attempted to access pageable memory at a process IRQL that was too high.
0x000000D4,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xd4--system-scan-at-raised-irql-caught-improper-driver-unlo,SYSTEM_SCAN_AT_RAISED_IRQL_CAUGHT_IMPROPER_DRIVER_UNLOAD,The SYSTEM_SCAN_AT_RAISED_IRQL_CAUGHT_IMPROPER_DRIVER_UNLOAD bug check has a value of 0x000000D4. This indicates that a driver did not cancel pending operations before unloading.
0x000000D5,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xd5--driver-page-fault-in-freed-special-pool,DRIVER_PAGE_FAULT_IN_FREED_SPECIAL_POOL,The DRIVER_PAGE_FAULT_IN_FREED_SPECIAL_POOL bug check has a value of 0x000000D5. This indicates that a driver has referenced memory which was earlier freed.
0x000000D6,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xd6--driver-page-fault-beyond-end-of-allocation,DRIVER_PAGE_FAULT_BEYOND_END_OF_ALLOCATION,The DRIVER_PAGE_FAULT_BEYOND_END_OF_ALLOCATION bug check has a value of 0x000000D6. This indicates the driver accessed memory beyond the end of its pool allocation.
0x000000D7,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xd7--driver-unmapping-invalid-view,DRIVER_UNMAPPING_INVALID_VIEW,The DRIVER_UNMAPPING_INVALID_VIEW bug check has a value of 0x000000D7. This indicates a driver is trying to unmap an address that was not mapped.
0x000000D8,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xd8--driver-used-excessive-ptes,DRIVER_USED_EXCESSIVE_PTES,The DRIVER_USED_EXCESSIVE_PTES bug check has a value of 0x000000D8. This indicates that there are no more system page table entries (PTE) remaining.
0x000000D9,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xd9--locked-pages-tracker-corruption,LOCKED_PAGES_TRACKER_CORRUPTION,The LOCKED_PAGES_TRACKER_CORRUPTION bug check has a value of 0x000000D9. This indicates that the internal locked-page tracking structures have been corrupted.
0x000000DA,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xda--system-pte-misuse,SYSTEM_PTE_MISUSE,The SYSTEM_PTE_MISUSE bug check has a value of 0x000000DA. This indicates that a page table entry (PTE) routine has been used in an improper way.
0x000000DB,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xdb--driver-corrupted-sysptes,DRIVER_CORRUPTED_SYSPTES,"The DRIVER_CORRUPTED_SYSPTES bug check has a value of 0x000000DB. This indicates that an attempt was made to touch memory at an invalid IRQL, probably due to corruption of system PTEs."
0x000000DC,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xdc--driver-invalid-stack-access,DRIVER_INVALID_STACK_ACCESS,The DRIVER_INVALID_STACK_ACCESS bug check has a value of 0x000000DC. This indicates that a driver accessed a stack address that lies below the stack pointer of the stack's thread.
0x000000DE,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xde--pool-corruption-in-file-area,POOL_CORRUPTION_IN_FILE_AREA,The POOL_CORRUPTION_IN_FILE_AREA bug check has a value of 0x000000DE. This indicates that a driver has corrupted pool memory that is used for holding pages destined for disk.
0x000000DF,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xdf--impersonating-worker-thread,MPERSONATING_WORKER_THREAD,The IMPERSONATING_WORKER_THREAD bug check has a value of 0x000000DF. This indicates that a workitem did not disable impersonation before it completed.
0x000000E0,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xe0--acpi-bios-fatal-error,ACPI_BIOS_FATAL_ERROR,The ACPI_BIOS_FATAL_ERROR bug check has a value of 0x000000E0. This indicates that one of your computer components is faulty.
0x000000E1,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xe1--worker-thread-returned-at-bad-irql,WORKER_THREAD_RETURNED_AT_BAD_IRQL,The WORKER_THREAD_RETURNED_AT_BAD_IRQL bug check has a value of 0x000000E1. This indicates that a worker thread completed and returned with IRQL &gt;= DISPATCH_LEVEL.
0x000000E2,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xe2--manually-initiated-crash,MANUALLY_INITIATED_CRASH,The MANUALLY_INITIATED_CRASH bug check has a value of 0x000000E2. This indicates that the user deliberately initiated a crash dump from either the kernel debugger or the keyboard.
0x000000E3,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xe3--resource-not-owned,RESOURCE_NOT_OWNED,The RESOURCE_NOT_OWNED bug check has a value of 0x000000E3. This indicates that a thread tried to release a resource it did not own.
0x000000E4,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xe4--worker-invalid,WORKER_INVALID,"The WORKER_INVALID bug check has a value of 0x000000E4. This indicates that memory that should not contain an executive work item does contain such an item, or that a currently active work item was queued."
0x000000E6,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xe6--driver-verifier-dma-violation,DRIVER_VERIFIER_DMA_VIOLATION,The DRIVER_VERIFIER_DMA_VIOLATION bug check has a value of 0x000000E6. This is the bug check code for all Driver Verifier <strong>DMA Verification</strong> violations.
0x000000E7,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xe7--invalid-floating-point-state,INVALID_FLOATING_POINT_STATE,The INVALID_FLOATING_POINT_STATE bug check has a value of 0x000000E7. This indicates that a thread's saved floating-point state is invalid.
0x000000E8,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xe8--invalid-cancel-of-file-open,INVALID_CANCEL_OF_FILE_OPEN,The INVALID_CANCEL_OF_FILE_OPEN bug check has a value of 0x000000E8. This indicates that an invalid file object was passed to <strong>IoCancelFileOpen</strong>.
0x000000E9,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xe9--active-ex-worker-thread-termination,ACTIVE_EX_WORKER_THREAD_TERMINATION,The ACTIVE_EX_WORKER_THREAD_TERMINATION bug check has a value of 0x000000E9. This indicates that an active executive worker thread is being terminated.
0x000000EA,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xea--thread-stuck-in-device-driver,THREAD_STUCK_IN_DEVICE_DRIVER,The THREAD_STUCK_IN_DEVICE_DRIVER bug check has a value of 0x000000EA. This indicates that a thread in a device driver is endlessly spinning.
0x000000EB,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xeb--dirty-mapped-pages-congestion,DIRTY_MAPPED_PAGES_CONGESTION,The DIRTY_MAPPED_PAGES_CONGESTION bug check has a value of 0x000000EB. This indicates that no free pages are available to continue operations.
0x000000EC,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xec--session-has-valid-special-pool-on-exit,SESSION_HAS_VALID_SPECIAL_POOL_ON_EXIT,The SESSION_HAS_VALID_SPECIAL_POOL_ON_EXIT bug check has a value of 0x000000EC. This indicates that a session unload occurred while a session driver still held memory.
0x000000ED,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xed--unmountable-boot-volume,UNMOUNTABLE_BOOT_VOLUME,The UNMOUNTABLE_BOOT_VOLUME bug check has a value of 0x000000ED. This indicates that the I/O subsystem attempted to mount the boot volume and it failed.
0x000000EF,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xef--critical-process-died,CRITICAL_PROCESS_DIED,"The CRITICAL_PROCESS_DIED bug check has a value of 0x000000EF. This indicates that a critical system process died. A critical process is one that forces the system to bug check if it terminates. This can happen when the state of the process is corrupted or otherwise is damaged. When this happens, as these processes are critical to the operation of Windows, a system bug check occurs as the operating system integrity is in question."
0x000000F0,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xf0--storage-miniport-error,STORAGE_MINIPORT_ERROR,The STORAGE_MINIPORT_ERROR bug check has a value of 0x00000F0. It indicates that a storage Miniport driver failed to complete a SRB request.
0x000000F1,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xf1--scsi-verifier-detected-violation,SCSI_VERIFIER_DETECTED_VIOLATION,The SCSI_VERIFIER_DETECTED_VIOLATION bug check has a value of 0x000000F1. This is the bug check code for all Driver Verifier <strong>SCSI Verification</strong> violations.
0x000000F2,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xf2--hardware-interrupt-storm,HARDWARE_INTERRUPT_STORM,The HARDWARE_INTERRUPT_STORM bug check has a value of 0x000000F2. This indicates that the kernel detected an interrupt storm.
0x000000F3,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xf3--disorderly-shutdown,DISORDERLY_SHUTDOWN,The DISORDERLY_SHUTDOWN bug check has a value of 0x000000F3. This indicates that Windows was unable to shut down due to lack of memory.
0x000000F4,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xf4--critical-object-termination,CRITICAL_OBJECT_TERMINATION,The CRITICAL_OBJECT_TERMINATION bug check has a value of 0x000000F4. This indicates that a process or thread crucial to system operation has unexpectedly exited or been terminated.
0x000000F5,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xf5--fltmgr-file-system,FLTMGR_FILE_SYSTEM,The FLTMGR_FILE_SYSTEM bug check has a value of 0x000000F5. This indicates that an unrecoverable failure occurred in the Filter Manager.
0x000000F6,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xf6--pci-verifier-detected-violation,PCI_VERIFIER_DETECTED_VIOLATION,The PCI_VERIFIER_DETECTED_VIOLATION bug check has a value of 0x000000F6. This indicates that an error occurred in the BIOS or another device being verified by the PCI driver.
0x000000F7,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xf7--driver-overran-stack-buffer,DRIVER_OVERRAN_STACK_BUFFER,The DRIVER_OVERRAN_STACK_BUFFER bug check has a value of 0x000000F7. This indicates that a driver has overrun a stack-based buffer.
0x000000F8,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xf8--ramdisk-boot-initialization-failed,RAMDISK_BOOT_INITIALIZATION_FAILED,The RAMDISK_BOOT_INITIALIZATION_FAILED bug check has a value of 0x000000F8. This indicates that an initialization failure occurred while attempting to boot from the RAM disk.
0x000000F9,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xf9--driver-returned-status-reparse-for-volume-open,DRIVER_RETURNED_STATUS_REPARSE_FOR_VOLUME_OPEN,The DRIVER_RETURNED_STATUS_REPARSE_FOR_VOLUME_OPEN bug check has a value of 0x000000F9. This indicates that a driver returned STATUS_REPARSE to an IRP_MJ_CREATE request with no trailing names.
0x000000FA,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xfa---http-driver-corrupted,HTTP_DRIVER_CORRUPTED,The HTTP_DRIVER_CORRUPTED bug check has a value of 0x000000FA. This indicates that the HTTP kernel driver (Http.sys) has reached a corrupted state and cannot recover.
0x000000FC,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xfc---attempted-execute-of-noexecute-memory,ATTEMPTED_EXECUTE_OF_NOEXECUTE_MEMORY,The ATTEMPTED_EXECUTE_OF_NOEXECUTE_MEMORY bug check has a value of 0x000000FC. This indicates that an attempt was made to execute non-executable memory.
0x000000FD,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xfd---dirty-nowrite-pages-congestion,DIRTY_NOWRITE_PAGES_CONGESTION,The DIRTY_NOWRITE_PAGES_CONGESTION bug check has a value of 0x000000FD. This indicates that there are no free pages available to continue basic system operations.
0x000000FE,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xfe--bugcode-usb-driver,BUGCODE_USB_DRIVER,The BUGCODE_USB_DRIVER bug check has a value of 0x000000FE. This indicates that an error has occurred in a universal serial bus (USB) driver.
0x000000FF,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xff---reserve-queue-overflow,RESERVE_QUEUE_OVERFLOW,"The RESERVE_QUEUE_OVERFLOW bug check has a value of 0x000000FF. This indicates that an attempt was made to insert a new item into a reserve queue, causing the queue to overflow."
0x00000100,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x100---loader-block-mismatch,LOADER_BLOCK_MISMATCH,"The LOADER_BLOCK_MISMATCH bug check has a value of 0x00000100. This indicates that either the loader block is invalid, or it does not match the system that is being loaded."
0x00000101,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x101---clock-watchdog-timeout,CLOCK_WATCHDOG_TIMEOUT,"The CLOCK_WATCHDOG_TIMEOUT bug check has a value of 0x00000101. This indicates that an expected clock interrupt on a secondary processor, in a multi-processor system, was not received within the allocated interval."
0x00000102,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x102--dpc-watchdog-timeout,DPC_WATCHDOG_TIMEOUT,The DPC_WATCHDOG_TIMEOUT bug check has a value of 0x00000102. This indicates that The DPC watchdog routine was not executed within the allocated time interval.
0x00000103,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x103---mup-file-system,MUP_FILE_SYSTEM,"The MUP_FILE_SYSTEM bug check has a value of 0x00000103. This bug check indicates that the multiple UNC provider (MUP) has encountered invalid or unexpected data. As a result, the MUP cannot channel a remote file system request to a network redirector, the Universal Naming Convention (UNC) provider."
0x00000104,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x104---agp-invalid-access,AGP_INVALID_ACCESS,The AGP_INVALID_ACCESS bug check has a value of 0x00000104. This indicates that the GPU wrote to a range of Accelerated Graphics Port (AGP) memory that had not previously been committed.
0x00000105,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x105---agp-gart-corruption,AGP_GART_CORRUPTION,The AGP_GART_CORRUPTION bug check has a value of 0x00000105. This indicates that the Graphics Aperture Remapping Table (GART) is corrupt.
0x00000106,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x106---agp-illegally-reprogrammed,AGP_ILLEGALLY_REPROGRAMMED,The AGP_ILLEGALLY_REPROGRAMMED bug check has a value of 0x00000106. This indicates that the Accelerated Graphics Port (AGP) hardware has been reprogrammed by an unauthorized agent.
0x00000108,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x108--third-party-file-system-failure,THIRD_PARTY_FILE_SYSTEM_FAILURE,The THIRD_PARTY_FILE_SYSTEM_FAILURE bug check has a value of 0x00000108. This indicates that an unrecoverable problem has occurred in a third-party file system or file system filter.
0x00000109,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x109---critical-structure-corruption,CRITICAL_STRUCTURE_CORRUPTION,The CRITICAL_STRUCTURE_CORRUPTION bug check has a value of 0x00000109. This indicates that the kernel has detected critical kernel code or data corruption.
0x0000010A,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x10a---app-tagging-initialization-failed,APP_TAGGING_INITIALIZATION_FAILED,The APP_TAGGING_INITIALIZATION_FAILED bug check has a value of 0x0000010A.
0x0000010C,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x10c---fsrtl-extra-create-parameter-violation,FSRTL_EXTRA_CREATE_PARAMETER_VIOLATION,The FSRTL_EXTRA_CREATE_PARAMETER_VIOLATION bug check has a value of 0x0000010C. This indicates that a violation was detected in the File system Run-time library (FsRtl) Extra Create Parameter (ECP) package.
0x0000010D,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x10d---wdf-violation,WDF_VIOLATION,The WDF_VIOLATION bug check has a value of 0x0000010D. This indicates that Kernel-Mode Driver Framework (KMDF) detected that Windows found an error in a framework-based driver.
0x0000010E,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x10e---video-memory-management-internal,VIDEO_MEMORY_MANAGEMENT_INTERNAL,The VIDEO_MEMORY_MANAGEMENT_INTERNAL bug check has a value of 0x0000010E. This indicates that the video memory manager has encountered a condition that it is unable to recover from.
0x0000010F,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x10f---resource-manager-exception-not-handled,RESOURCE_MANAGER_EXCEPTION_NOT_HANDLED,The RESOURCE_MANAGER_EXCEPTION_NOT_HANDLED bug check has a value of 0x0000010F. This indicates that the kernel transaction manager detected that a kernel-mode resource manager has raised an exception in response to a direct call-back. The resource manager is in an unexpected and unrecoverable state.
0x00000111,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x111---recursive-nmi,RECURSIVE_NMI,The RECURSIVE_NMI bug check has a value of 0x00000111. This bug check indicates that a non-maskable-interrupt (NMI) occurred while a previous NMI was in progress.
0x00000112,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x112---msrpc-state-violation,MSRPC_STATE_VIOLATION,The MSRPC_STATE_VIOLATION bug check has a value of 0x00000112. This indicates that the Msrpc.sys driver has initiated a bug check.
0x00000113,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x113---video-dxgkrnl-fatal-error,VIDEO_DXGKRNL_FATAL_ERROR,The VIDEO_DXGKRNL_FATAL_ERROR bug check has a value of 0x00000113. This indicates that the Microsoft DirectX graphics kernel subsystem has detected a violation.
0x00000114,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x114---video-shadow-driver-fatal-error,VIDEO_SHADOW_DRIVER_FATAL_ERROR,The VIDEO_SHADOW_DRIVER_FATAL_ERROR bug check has a value of 0x00000114. This indicates that the shadow driver has detected a violation.
0x00000115,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x115---agp-internal,AGP_INTERNAL,The AGP_INTERNAL bug check has a value of 0x00000115. This indicates that the accelerated graphics port (AGP) driver has detected a violation.
0x00000116,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x116---video-tdr-failure,VIDEO_TDR_FAILURE,The VIDEO_TDR_FAILURE bug check has a value of 0x00000116. This indicates that an attempt to reset the display driver and recover from a timeout failed.
0x00000117,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x117---video-tdr-timeout-detected,VIDEO_TDR_TIMEOUT_DETECTED,The VIDEO_TDR_TIMEOUT_DETECTED bug check has a value of 0x00000117. This indicates that the display driver failed to respond in a timely fashion.
0x00000119,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x119---video-scheduler-internal-error,VIDEO_SCHEDULER_INTERNAL_ERROR,The VIDEO_SCHEDULER_INTERNAL_ERROR bug check has a value of 0x00000119. This indicates that the video scheduler has detected a fatal violation.
0x0000011A,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x11a---em-initialization-failure,EM_INITIALIZATION_FAILURE,The EM_INITIALIZATION_FAILURE bug check has a value of 0x0000011A.
0x0000011B,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x11b---driver-returned-holding-cancel-lock,DRIVER_RETURNED_HOLDING_CANCEL_LOCK,"The DRIVER_RETURNED_HOLDING_CANCEL_LOCK bug check has a value of 0x0000011B. This bug check indicates that a driver has returned from a <em>cancel</em> routine that holds the global cancel lock. This causes all later cancellation calls to fail, and results in either a deadlock or another bug check."
0x0000011C,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x11c--attempted-write-to-cm-protected-storage,ATTEMPTED_WRITE_TO_CM_PROTECTED_STORAGE,The ATTEMPTED_WRITE_TO_CM_PROTECTED_STORAGE bug check has a value of 0x0000011C. This bug check indicates that an attempt was made to write to the read-only protected storage of the configuration manager.
0x0000011D,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x11d---event-tracing-fatal-error,EVENT_TRACING_FATAL_ERROR,The EVENT_TRACING_FATAL_ERROR bug check has a value of 0x0000011D. This bug check indicates that the Event Tracing subsystem has encountered an unexpected fatal error.
0x0000011E,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x11e--too-many-recursive-faults,TOO_MANY_RECURSIVE_FAULTS,The TOO_MANY_RECURSIVE_FAULTS bug check has a value of 0x0000011E. This indicates that a file system has caused too many recursive faults under low resource conditions to be handled.
0x0000011F,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x11f--invalid-driver-handle,INVALID_DRIVER_HANDLE,The INVALID_DRIVER_HANDLE bug check has a value of 0x0000011F. This indicates that someone has closed the initial handle for a driver between inserting the driver object and referencing the handle.
0x00000120,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x120--bitlocker-fatal-error-,BITLOCKER_FATAL_ERROR,The BITLOCKER_FATAL_ERROR bug check has a value of 0x00000120. This indicates that BitLocker drive encryption encountered a problem that it cannot recover from.
0x00000121,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x121---driver-violation,DRIVER_VIOLATION,The DRIVER_VIOLATION bug check has a value of 0x00000121. This bug check indicates that a driver has caused a violation.
0x00000122,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x122---whea-internal-error,WHEA_INTERNAL_ERROR,"The WHEA_INTERNAL_ERROR bug check has a value of 0x00000122. This bug check indicates that an internal error in the Windows Hardware Error Architecture (WHEA) has occurred. Errors can result from a bug in the implementation of a platform-specific hardware error driver (PSHED) plug-in supplied by a vendor, the firmware implementation of error records, or the firmware implementation of error injection."
0x00000123,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x123--crypto-self-test-failure-,CRYPTO_SELF_TEST_FAILURE,The CRYPTO_SELF_TEST_FAILURE bug check has a value of 0x00000123. This indicates that the cryptographic subsystem failed a mandatory algorithm self-test during bootstrap.
0x00000124,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x124---whea-uncorrectable-error,WHEA_UNCORRECTABLE_ERROR,The WHEA_UNCORRECTABLE_ERROR bug check has a value of 0x00000124. This bug check indicates that a fatal hardware error has occurred. This bug check uses the error data that is provided by the Windows Hardware Error Architecture (WHEA).
0x00000125,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x125--nmr-invalid-state,NMR_INVALID_STATE,The NMR_INVALID_STATE bug check has a value of 0x00000125. This indicates that NMR (network module registrar) has detected an invalid state. See parameter 1 for the state type.
0x00000126,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x126--netio-invalid-pool-caller,NETIO_INVALID_POOL_CALLER,"The NETIO_INVALID_POOL_CALLER bug check has a value of 0x00000126. This indicates that an invalid pool request has been made to netio managed memory pool, e.g. FSB and MDL."
0x00000127,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x127---page-not-zero,PAGE_NOT_ZERO,The PAGE_NOT_ZERO bug check has a value of 0x00000127. This bug check indicates that a page that should have been filled with zeros was not. This bug check might occur because of a hardware error or because a privileged component of the operating system modified a page after freeing it.
0x00000128,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x128--worker-thread-returned-with-bad-io-priority,WORKER_THREAD_RETURNED_WITH_BAD_IO_PRIORITY,The WORKER_THREAD_RETURNED_WITH_BAD_IO_PRIORITY bug check has a value of 0x00000128. This indicates that a worker threads IOPriority was wrongly modified by the called worker routine.
0x00000129,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x129--worker-thread-returned-with-bad-paging-io-priority,WORKER_THREAD_RETURNED_WITH_BAD_PAGING_IO_PRIORITY,The WORKER_THREAD_RETURNED_WITH_BAD_PAGING_IO_PRIORITY bug check has a value of 0x00000129. This indicates that a worker threads Paging IOPriority was wrongly modified by the called worker routine.
0x0000012A,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x12a--mui-no-valid-system-language,MUI_NO_VALID_SYSTEM_LANGUAGE,"The MUI_NO_VALID_SYSTEM_LANGUAGE bug check has a value of 0x0000012A. This indicates that Windows did not find any installed, licensed language packs for the system default UI language."
0x0000012B,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x12b---faulty-hardware-corrupted-page,FAULTY_HARDWARE_CORRUPTED_PAGE,"The FAULTY_HARDWARE_CORRUPTED_PAGE bug check has a value of 0x0000012B. This bug check indicates that the Windows memory manager detected corruption, and the corruption could only have been caused by a component accessing memory using physical addressing."
0x0000012C,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x12c---exfat-file-system,EXFAT_FILE_SYSTEM,The EXFAT_FILE_SYSTEM bug check has a value of 0x0000012C. This bug check indicates that a problem occurred in the Extended File Allocation Table (exFAT) file system.
0x0000012D,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x12d--volsnap-overlapped-table-access,VOLSNAP_OVERLAPPED_TABLE_ACCESS,The VOLSNAP_OVERLAPPED_TABLE_ACCESS bug check has a value of 0x0000012D. This indicates that volsnap tried to access a common table from two different threads which may result in table corruption and eventually corrupt the table.
0x0000012E,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x12e--invalid-mdl-range,INVALID_MDL_RANGE,"The INVALID_MDL_RANGE bug check has a value of 0x0000012E. This indicates that a driver has called the IoBuildPartialMdl() function and passed it an MDL to map part of a source MDL, but the virtual address range specified is outside the range in the source MDL. This is typically a driver bug."
0x0000012F,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x12f--vhd-boot-initialization-failed,VHD_BOOT_INITIALIZATION_FAILED,The VHD_BOOT_INITIALIZATION_FAILED bug check has a value of 0x0000012F. This indicates that an initialization failure occurred while attempting to boot from a VHD.
0x00000130,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x130--dynamic-add-processor-mismatch,DYNAMIC_ADD_PROCESSOR_MISMATCH,The DYNAMIC_ADD_PROCESSOR_MISMATCH bug check has a value of 0x00000130. This bugcheck indicates that a new processor added to the system is incompatible with the current configuration.
0x00000131,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x131--invalid-extended-processor-state,INVALID_EXTENDED_PROCESSOR_STATE,The INVALID_EXTENDED_PROCESSOR_STATE bug check has a value of 0x00000131. This indicates that an invalid combination of parameters was detected while saving or restoring extended processor state.
0x00000132,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x132--resource-owner-pointer-invalid,RESOURCE_OWNER_POINTER_INVALID,The RESOURCE_OWNER_POINTER_INVALID bug check has a value of 0x00000132. This indicates that an invalid resource owner pointer was supplied.
0x00000133,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x133-dpc-watchdog-violation,DPC_WATCHDOG_VIOLATION,"The DPC_WATCHDOG_VIOLATION bug check has a value of 0x00000133. This bug check indicates that the DPC watchdog executed, either because it detected a single long-running deferred procedure call (DPC), or because the system spent a prolonged time at an interrupt request level (IRQL) of DISPATCH_LEVEL or above. The value of Parameter 1 indicates whether a single DPC exceeded a timeout, or whether the system cumulatively spent an extended period of time at IRQL DISPATCH_LEVEL or above. DPCs should not run longer than 100 microseconds and ISRs should not run longer than 25 microseconds, however the actual timeout values on the system are set much higher."
0x00000134,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x134--drive-extender,DRIVE_EXTENDER,The DRIVE_EXTENDER bug check has a value of 0x00000134. This indicates that the drive extender component has experienced a severe internal error that prevents continued system operation.
0x00000135,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x135--registry-filter-driver-exception,REGISTRY_FILTER_DRIVER_EXCEPTION,The REGISTRY_FILTER_DRIVER_EXCEPTION bug check has a value of 0x00000135. This bugcheck is caused by an unhandled exception in a registry filtering driver.
0x00000136,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x136--vhd-boot-host-volume-not-enough-space,VHD_BOOT_HOST_VOLUME_NOT_ENOUGH_SPACE,The VHD_BOOT_HOST_VOLUME_NOT_ENOUGH_SPACE bug check has a value of 0x00000136. This indicates that an initialization failure occurred while attempting to boot from a VHD. The volume that hosts the VHD does not have enough free space to expand the VHD.
0x00000137,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x137--win32k-handle-manager,WIN32K_HANDLE_MANAGER,The WIN32K_HANDLE_MANAGER bug check has a value of 0x00000137. This indicates that the win32k/ntuser handle manager has detected a fatal error.
0x00000138,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x138-gpio-controller-driver-error,GPIO_CONTROLLER_DRIVER_ERROR,The GPIO_CONTROLLER_DRIVER_ERROR bug check has a value of 0x00000138. This bug check indicates that the GPIO class extension driver encountered a fatal error.
0x00000139,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x139--kernel-security-check-failure,KERNEL_SECURITY_CHECK_FAILURE,The KERNEL_SECURITY_CHECK_FAILURE bug check has a value of 0x00000139. This bug check indicates that the kernel has detected the corruption of a critical data structure.
0x0000013A,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x13a--kernel-mode-heap-corruption,KERNEL_MODE_HEAP_CORRUPTION,The KERNEL_MODE_HEAP_CORRUPTION bug check has a value of 0x0000013A. This indicates that the kernel mode heap manager has detected corruption in a heap.
0x0000013B,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x13b--passive-interrupt-error,PASSIVE_INTERRUPT_ERROR,The PASSIVE_INTERRUPT_ERROR bug check has a value of 0x0000013B. This indicates that the kernel has detected issues with the passive-level interrupt.
0x0000013C,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x13c--invalid-io-boost-state,INVALID_IO_BOOST_STATE,The INVALID_IO_BOOST_STATE bug check has a value of 0x0000013C. This indicates that a thread exited with an invalid I/O boost state. This should be zero when a thread exits.
0x0000013D,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x13d--critical-initialization-failure,CRITICAL_INITIALIZATION_FAILURE,The CRITICAL_INITIALIZATION_FAILURE bug check has a value of 0x0000013D. This indicates that early kernel initialization has failed.
0x00000140,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x140--storage-device-abnormality-detected,STORAGE_DEVICE_ABNORMALITY_DETECTED,"The STORAGE_DEVICE_ABNORMALITY_DETECTED bug check has a value of 0x00000140. This indicates that the storage driver stack encountered rate of responsiveness violations, exceeding the threshold, or other failures to respond."
0x00000141,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x141---video-engine-timeout-detected,VIDEO_ENGINE_TIMEOUT_DETECTED,The VIDEO_ENGINE_TIMEOUT_DETECTED bug check has a value of 0x00000141. This indicates that one of the display engines failed to respond in timely fashion.
0x00000142,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x142--video-tdr-application-blocked,VIDEO_TDR_APPLICATION_BLOCKED,The VIDEO_TDR_APPLICATION_BLOCKED bug check has a value of 0x00000142. This indicates that an application has been blocked from accessing graphics hardware.
0x00000143,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x143--processor-driver-internal,PROCESSOR_DRIVER_INTERNAL,The PROCESSOR_DRIVER_INTERNAL bug check has a value of 0x00000143. This indicates that the Processor Power Management (PPM) driver encountered a fatal error.
0x00000144,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x144--bugcode-usb3-driver,BUGCODE_USB3_DRIVER,"The <strong>BUGCODE_USB3_DRIVER</strong> bug check has a value of 0x00000144. This is the code used for all USB 3 bug checks. Parameter 1 specifies the type of the USB 3 bug check, and the meanings of the other parameters are dependent on Parameter 1."
0x00000145,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x145--secure-boot-violation-,SECURE_BOOT_VIOLATION,The SECURE_BOOT_VIOLATION bug check has a value of 0x00000145. This indicates that the secure Boot policy enforcement could not be started due to an invalid policy or a required operation not being completed.
0x00000147,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x147--abnormal-reset-detected,ABNORMAL_RESET_DETECTED,"The ABNORMAL_RESET_DETECTED bug check has a value of 0x00000147. This indicates that Windows underwent an abnormal reset. No context or exception records were saved, and bugcheck callbacks were not called."
0x00000149,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x149--refs-file-system,REFS_FILE_SYSTEM,The REFS_FILE_SYSTEM bug check has a value of 0x00000149. This indicates that a file system error has occurred.
0x0000014A,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x14a--kernel-wmi-internal,KERNEL_WMI_INTERNAL,The KERNEL_WMI_INTERNAL bug check has a value of 0x0000014A. This indicates that the internal kernel WMI subsystem has encountered a fatal error.
0x0000014B,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x14b--soc-subsystem-failure,SOC_SUBSYSTEM_FAILURE,The SOC_SUBSYSTEM_FAILURE bug check has a value of 0x0000014B. This indicates that an unrecoverable error was encountered in a System on a Chip (SoC) subsystem.
0x0000014C,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x14c--fatal-abnormal-reset-error,FATAL_ABNORMAL_RESET_ERROR,The FATAL_ABNORMAL_RESET_ERROR bug check has a value of 0x0000014C. This indicates that an unrecoverable system error occurred or the system has abnormally reset.
0x0000014D,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x14d--exception-scope-invalid,EXCEPTION_SCOPE_INVALID,The EXCEPTION_SCOPE_INVALID bug check has a value of 0x0000014D. This indicates that an internal inconsistency in exception dispatching has been detected.
0x0000014E,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x14e--soc-critical-device-removed,SOC_CRITICAL_DEVICE_REMOVED,The SOC_CRITICAL_DEVICE_REMOVED bug check has a value of 0x0000014E. This indicates that a critical SOC device has been unexpectedly removed or failed.
0x0000014F,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x14f--pdc-watchdog-timeout,PDC_WATCHDOG_TIMEOUT,"The PDC_WATCHDOG_TIMEOUT bug check has a value of 0x0000014F. This indicates that a system component failed to respond within the allocated time period, preventing the system from exiting connected standby."
0x00000150,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x150--tcpip-aoac-nic-active-reference-leak,TCPIP_AOAC_NIC_ACTIVE_REFERENCE_LEAK,The TCPIP_AOAC_NIC_ACTIVE_REFERENCE_LEAK bug check has a value of 0x00000150. This indicates that the NIC active reference should have been released when the send queue was fully drained.
0x00000151,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x151--unsupported-instruction-mode,UNSUPPORTED_INSTRUCTION_MODE,"The UNSUPPORTED_INSTRUCTION_MODE bug check has a value of 0x00000151. This indicates that an attempt was made to execute code using an unsupported processor instruction mode (for example, executing classic ARM instructions instead of ThumbV2 instructions). This is not permitted."
0x00000152,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x152--invalid-push-lock-flags,INVALID_PUSH_LOCK_FLAGS,The INVALID_PUSH_LOCK_FLAGS bug check has a value of 0x00000152. This indicates that the flags supplied to one of push lock APIs were invalid.
0x00000153,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x153--kernel-lock-entry-leaked-on-thread-termination,KERNEL_LOCK_ENTRY_LEAKED_ON_THREAD_TERMINATION,The KERNEL_LOCK_ENTRY_LEAKED_ON_THREAD_TERMINATION bug check has a value of 0x00000153. This indicates that a thread was terminated before it had freed all its AutoBoost lock entries.
0x00000154,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x154--unexpected-store-exception,UNEXPECTED_STORE_EXCEPTION,The UNEXPECTED_STORE_EXCEPTION bug check has a value of 0x00000154. This indicates that the kernel memory store component caught an unexpected exception.
0x00000155,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x155--os-data-tampering,OS_DATA_TAMPERING,The OS_DATA_TAMPERING bug check has a value of 0x00000155.
0x00000156,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x156--winsock-detected-hung-closesocket-livedump,WINSOCK_DETECTED_HUNG_CLOSESOCKET_LIVEDUMP,The WINSOCK_DETECTED_HUNG_CLOSESOCKET_LIVEDUMP bug check has a value of 0x00000156. This indicates that Winsock detected a hung transport endpoint close request.
0x00000157,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x157--kernel-thread-priority-floor-violation,KERNEL_THREAD_PRIORITY_FLOOR_VIOLATION,The ATTEMPTED_SWITCH_FROM_DPC bug check has a value of 0x00000157. This indicates that an illegal operation was attempted on the priority floor of a particular thread.
0x00000158,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x158--illegal-iommu-page-fault,ILLEGAL_IOMMU_PAGE_FAULT,The ILLEGAL_IOMMU_PAGE_FAULT bug check has a value of 0x00000158. This indicates that the IOMMU has delivered a page fault packet for an invalid ASID. This is not safe since the ASID may have already been reused.
0x00000159,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x159--hal-illegal-iommu-page-fault,HAL_ILLEGAL_IOMMU_PAGE_FAULT,The HAL_ILLEGAL_IOMMU_PAGE_FAULT bug check has a value of 0x00000159. This indicates that the IOMMU has delivered a page fault against an ASID that was in the process of being freed. The driver was responsible for completing any inflight requests before this point in time and this bugcheck indicates a driver in the system did not do so.
0x0000015A,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x15a--sdbus-internal-error,SDBUS_INTERNAL_ERROR,The SDBUS_INTERNAL_ERROR bug check has a value of 0x0000015A. This indicates that an unrecoverable hardware failure has occurred on an SD-attached device.
0x0000015B,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x15b--worker-thread-returned-with-system-page-priority-active,WORKER_THREAD_RETURNED_WITH_SYSTEM_PAGE_PRIORITY_ACTIVE,The WORKER_THREAD_RETURNED_WITH_SYSTEM_PAGE_PRIORITY_ACTIVE bug check has a value of 0x0000015B. This indicates that a worker thread's system page priority was leaked by the called worker routine.
0x0000015C,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x15c--pdc-watchdog-timeout-livedump,PDC_WATCHDOG_TIMEOUT_LIVEDUMP,"The PDC_WATCHDOG_TIMEOUT_LIVEDUMP bug check has a value of 0x0000015C. This indicates that a system component failed to respond within the allocated time period, preventing the system from entering or exiting connected standby."
0x0000015D,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x15d-soc-subsystem-failure-livedump,SOC_SUBSYSTEM_FAILURE_LIVEDUMP,The SOC_SUBSYSTEM_FAILURE_LIVEDUMP bug code has a value of 0x0000015D. This indicates that a System on a Chip (SoC) subsystem has experienced a critical fault and has captured a live kernel dump. The SoC subsystem does not generate a bug check in this situation.
0x0000015E,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x15e-bugcode-ndis-driver-live-dump,BUGCODE_NDIS_DRIVER_LIVE_DUMP,The BUGCODE_NDIS_DRIVER_LIVE_DUMP bug code has a value of 0x0000015E. This bug code indicates that NDIS has captured a live kernel dump. NDIS does not generate a bug check in this situation.
0x0000015F,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x15f--connected-standby-watchdog-timeout-livedump,CONNECTED_STANDBY_WATCHDOG_TIMEOUT_LIVEDUMP,The CONNECTED_STANDBY_WATCHDOG_TIMEOUT_LIVEDUMP bug check has a value of 0x0000015F. This indicates that a connected standby watchdog timeout has occurred.
0x00000160,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x160--win32k-atomic-check-failure,WIN32K_ATOMIC_CHECK_FAILURE,The WIN32K_ATOMIC_CHECK_FAILURE bug check has a value of 0x00000160. This indicates that a Win32k function has violated an ATOMICCHECK.
0x00000161,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x161--live-system-dump,LIVE_SYSTEM_DUMP,The LIVE_SYSTEM_DUMP bug check has a value of 0x00000161. This indicates that the system administrator requested the collection of a live system memory dump.
0x00000162,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x162--kernel-auto-boost-invalid-lock-release,KERNEL_AUTO_BOOST_INVALID_LOCK_RELEASE,The KERNEL_AUTO_BOOST_INVALID_LOCK_RELEASE bug check has a value of 0x00000162. This indicates that a lock tracked by AutoBoost was released by a thread that did not own the lock.
0x00000163,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x162--worker-thread-test-condition,WORKER_THREAD_TEST_CONDITION,The WORKER_THREAD_TEST_CONDITION bug check has a value of 0x00000163. This indicates that a test for kernel worker threads raised a failure.
0x00000164,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x164--win32k-critical-failure,WIN32K_CRITICAL_FAILURE,The WIN32K_CRITICAL_FAILURE bug check has a value of 0x00000164. This indicates that Win32k has encountered a critical failure.
0x00000165,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x165--cluster-csv-staus-io-timeout-livedump,CLUSTER_CSV_STATUS_IO_TIMEOUT_LIVEDUMP,The CLUSTER_CSV_STATUS_IO_TIMEOUT_LIVEDUMP bug check has a value of 0x00000165. This indicates that a SMB client on the non-coordinating node complains that an IO on coordinating node is taking too long and fails all IOs with STATUS_IO_TIMEOUT.
0x00000166,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x166--cluster-resource-call-timeout-livedump,CLUSTER_RESOURCE_CALL_TIMEOUT_LIVEDUMP,The CLUSTER_RESOURCE_CALL_TIMEOUT_LIVEDUMP bug check has a value of 0x00000166. This indicates that a Cluster Resource call took longer than configured timeout.
0x00000167,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x167--cluster-csv-snapshot-device-info-timeout-livedump,CLUSTER_CSV_SNAPSHOT_DEVICE_INFO_TIMEOUT_LIVEDUMP,The CLUSTER_CSV_SNAPSHOT_DEVICE_INFO_TIMEOUT_LIVEDUMPP bug check has a value of 0x00000167. This indicates that a Cluster Service call to the volsnap to query snapshot information took too long.
0x00000168,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x168--cluster-csv-state-transition-timeout-livedump,CLUSTER_CSV_STATE_TRANSITION_TIMEOUT_LIVEDUMP,The CLUSTER_CSV_STATE_TRANSITION_TIMEOUT_LIVEDUMP bug check has a value of 0x00000168. This indicates that a Cluster Shared Volume state transition took too long.
0x00000169,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x169--cluster-csv-volume-arival-livedump,CLUSTER_CSV_VOLUME_ARRIVAL_LIVEDUMP,"The CLUSTER_CSV_VOLUME_ARRIVAL_LIVEDUMP bug check has a value of 0x00000169. This indicates that Cluster Shared Volume Manager was asked to create a new volume device object, and volume has not arrived in time."
0x0000016A,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x16a--cluster-csv-volume-removal-livedump,CLUSTER_CSV_VOLUME_REMOVAL_LIVEDUMP,The CLUSTER_CSV_VOLUME_REMOVAL_LIVEDUMP bug check has a value of 0x0000016A. This indicates that a Cluster Shared Volume Manager volume removal request has timed out.
0x0000016B,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x16b--cluster-csv-cluster-watchdog-livedump,CLUSTER_CSV_CLUSTER_WATCHDOG_LIVEDUMP,The CLUSTER_CSV_CLUSTER_WATCHDOG_LIVEDUMP bug check has a value of 0x0000016B. This indicates that the Cluster service user mode watchdog detected that a thread is not making forward progress for a long time.
0x0000016C,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x16c--invalid-rundown-protection-flags,INVALID_RUNDOWN_PROTECTION_FLAGS,The INVALID_RUNDOWN_PROTECTION_FLAGS bug check has a value of 0x0000016C. This indicates that the flags supplied to one of the rundown protection APIs were invalid.
0x0000016D,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x16d--invalid-slot-allocator-flags,INVALID_SLOT_ALLOCATOR_FLAGS,The INVALID_SLOT_ALLOCATOR_FLAGS bug check has a value of 0x0000016D. This indicates that the flags supplied to one of the slot allocator APIs were invalid.
0x0000016E,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x16e--eresource-invalid-release,ERESOURCE_INVALID_RELEASE,The ERESOURCE_INVALID_RELEASE bug check has a value of 0x0000016E. This indicates that the target thread pointer supplied to ExReleaseResourceForThreadLite was invalid.
0x0000016F,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x16f--cluster-csv-state-transistion-interval-livedump,CLUSTER_CSV_STATE_TRANSITION_INTERVAL_TIMEOUT_LIVEDUMP,The CLUSTER_CSV_STATE_TRANSITION_INTERVAL_TIMEOUT_LIVEDUMP bug check has a value of 0x0000016F. This indicates that a Cluster Shared Volume next state transition request has not arrived.
0x00000170,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x170--crypto-library-internal-error,CRYPTO_LIBRARY_INTERNAL_ERROR,The CRYPTO_LIBRARY_INTERNAL_ERROR  bug check has a value of 0x00000170. It indicates that an internal error in the crypto libraries occurred.
0x00000171,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x171--cluster-csv-clussvc-disconnect-watchdog,CLUSTER_CSV_CLUSSVC_DISCONNECT_WATCHDOG,The CLUSTER_CSV_CLUSSVC_DISCONNECT_WATCHDOG bug check has a value of 0x00000171. This indicates that Cluster disconnect is not making forward progress.
0x00000173,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x173--coremsgcall-internal-error,COREMSGCALL_INTERNAL_ERROR,The PFN_SHARE_COUNT bug check has a value of 0x00000173. This indicates that the CoreMessageCall detected an unrecoverable error.
0x00000174,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x174--coremsg-internal-error,COREMSG_INTERNAL_ERROR,The COREMSG_INTERNAL_ERROR bug check has a value of 0x00000174. This indicates that CoreMessaging detected an unrecoverable error.
0x00000175,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x175--previous-fatal-abnormal-reset-error,PREVIOUS_FATAL_ABNORMAL_RESET_ERROR,The PREVIOUS_FATAL_ABNORMAL_RESET_ERROR bug check has a value of 0x00000175. This indicates that an unrecoverable system error occurred or the system has abnormally reset on Windows phone devices. The system generated a live dump to collect device crash data from the previous error.
0x00000178,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x175--elam-driver-detected-fatal-error,ELAM_DRIVER_DETECTED_FATAL_ERROR,The ELAM_DRIVER_DETECTED_FATAL_ERROR bug check has a value of 0x00000178. This indicates that ELAM driver detected a fatal error.
0x00000179,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x179--cluster-clusport-status-io-timeout-livedump,CLUSTER_CLUSPORT_STATUS_IO_TIMEOUT_LIVEDUMP,The CLUSTER_CLUSPORT_STATUS_IO_TIMEOUT_LIVEDUMP bug check has a value of 0x00000179. This indicates that SMB client on the initiator node complains that an IO to a target node is taking too long and fails all IOs with STATUS_IO_TIMEOUT.
0x0000017B,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x17b--profiler-configuration-illegal,PROFILER_CONFIGURATION_ILLEGAL,The PROFILER_CONFIGURATION_ILLEGAL bug check has a value of 0x0000017B.
0x0000017C,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x17c--pdc-lock-watchdog-livedump,PDC_LOCK_WATCHDOG_LIVEDUMP,The PDC_LOCK_WATCHDOG_LIVEDUMP bug check has a value of 0x0000017C. This indicates that a thread has been holding the PDC lock for too long.
0x0000017D,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x17d-unexpected-revocation-livedump,PDC_UNEXPECTED_REVOCATION_LIVEDUMP,The PDC_UNEXPECTED_REVOCATION_LIVEDUMP bug check has a value of 0x0000017D. It indicates that an activator has been revoked unexpectedly.
0x0000017E,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x17e--microcode-revision-mismatch,MICROCODE_REVISION_MISMATCH,The MICROCODE_REVISION_MISMATCH bug check has a value of 0x0000017E. It indicates that one or more processors in the multiprocessor configuration have inconsistent microcode loaded.
0x00000187,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x187--video-dwminit-timeout-fallback-bdd,VIDEO_DWMINIT_TIMEOUT_FALLBACK_BDD,The VIDEO_DWMINIT_TIMEOUT_FALLBACK_BDD bug check has a value of 0x00000187. This indicates that video fell back to BDD rather than using the IHV driver. This always generates a live dump.
0x00000188,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x188--cluster-csvfs-livedump,CLUSTER_CSVFS_LIVEDUMP,The CLUSTER_CSVFS_LIVEDUMP bug check has a value of 0x00000188. This indicates that CSVFS initiated this livedump to help debug an inconsistent state.
0x00000189,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x189--bad-object-header,BAD_OBJECT_HEADER,The BAD_OBJECT_HEADER bug check has a value of 0x00000189. This indicates that The OBJECT_HEADER has been corrupted.
0x0000018B,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x18b--secure-kernel-error,SECURE_KERNEL_ERROR,The SECURE_KERNEL_ERROR bug check has a value of 0x0000018B. This indicates that the secure kernel has encountered a fatal error.
0x0000018C,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x18c--hyperguard-violation,HYPERGUARD_VIOLATION,The HYPERGUARD_VIOLATION bug check has a value of 0x0000018C. This indicates that the kernel has detected that critical kernel code or data have been corrupted.
0x0000018D,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x18d--secure-fault-unhandled,SECURE_FAULT_UNHANDLED,The SECURE_FAULT_UNHANDLED bug check has a value of 0x0000018D.
0x0000018E,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x18e--kernel-partition-reference-violation,KERNEL_PARTITION_REFERENCE_VIOLATION,The KERNEL_PARTITION_REFERENCE_VIOLATION bug check has a value of 0x0000018E.
0x00000190,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x190--win32k-critical-failure-livedump,WIN32K_CRITICAL_FAILURE_LIVEDUMP,The WIN32K_CRITICAL_FAILURE_LIVEDUMP bug check has a value of 0x00000190. This indicates that Win32k has encountered a critical failure. A live dump is captured to collect the debug information.
0x00000191,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x191--pf-detected-corruption,PF_DETECTED_CORRUPTION,The PF_DETECTED_CORRUPTION bug check has a value of 0x00000191.
0x00000192,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x192--kernel-auto-boost-lock-acquisition-with-raised-irql,KERNEL_AUTO_BOOST_LOCK_ACQUISITION_WITH_RAISED_IRQL,The KERNEL_AUTO_BOOST_LOCK_ACQUISITION_WITH_RAISED_IRQL bug check has a value of 0x00000192. This indicates that a lock tracked by AutoBoost was acquired while executing at DISPATCH_LEVEL or above.
0x00000193,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x192--video-dxgkrnl-livedump,VIDEO_DXGKRNL_LIVEDUMP,The VIDEO_DXGKRNL_LIVEDUMP bug check has a value of 0x00000193. This indicates a livedump triggered by dxgkrnl occurred.
0x00000195,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x195--smb-server-livedump,SMB_SERVER_LIVEDUMP,The SMB_SERVER_LIVEDUMP bug check has a value of 0x00000195. This indicates the SMB server detected a problem and has captured a kernel dump to collect debug information.
0x00000196,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x196--loader-rollback-detected,LOADER_ROLLBACK_DETECTED,The LOADER_ROLLBACK_DETECTED bug check has a value of 0x00000196. This indicates that the version of the OS loader does not match the operating system.
0x00000197,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x197--win32k-security-failure,WIN32K_SECURITY_FAILURE,The WIN32K_SECURITY_FAILURE bug check has a value of 0x00000197. This indicates a security failure was detected in win32k.
0x00000198,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x198--ufx-livedump,UFX_LIVEDUMP,The UFX_LIVEDUMP bug check has a value of 0x00000198. This indicates that a UFX live dump occurred.
0x00000199,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x199--kernel-storage-slot-in-use,KERNEL_STORAGE_SLOT_IN_USE,The KERNEL_STORAGE_SLOT_IN_USE bug check has a value of 0x00000199. This indicates that the storage slot cannot be freed because there is an object using it.
0x0000019A,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x19a--worker-thread-returned-while-attached-to-silo,WORKER_THREAD_RETURNED_WHILE_ATTACHED_TO_SILO,The WORKER_THREAD_RETURNED_WHILE_ATTACHED_TO_SILO bug check has a value of 0x0000019A. This indicates that a worker thread attached to a silo and did not detach before returning.
0x0000019B,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x19b--ttm-fatal-error,TTM_FATAL_ERROR,The TTM_FATAL_ERROR bug check has a value of 0x0000019B. This indicates that the terminal topology manager experienced a fatal error.
0x0000019C,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x19c--win32k-power-watchdog-timeout,WIN32K_POWER_WATCHDOG_TIMEOUT,The WIN32K_POWER_WATCHDOG_TIMEOUT bug check has a value of 0x0000019C. This indicates that Win32k did not turn the monitor on in a timely manner.
0x0000019D,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x19d--cluster-svhdx-livedump,CLUSTER_SVHDX_LIVEDUMP,The CLUSTER_SVHDX_LIVEDUMP bug check has a value of 0x0000019D. This indicates that SVHDX initiated this livedump to help debug an inconsistent state.
0x000001A0,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1a0--ttm-watchdog-timeout,TTM_WATCHDOG_TIMEOUT,The TTM_WATCHDOG_TIMEOUT bug check has a value of 0x000001A0. It indicates that the terminal topology manager detected that for the configured timeouts some device specific operations did not complete.
0x000001A1,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1a1--win32k-callout-watchdog-livedump,WIN32K_CALLOUT_WATCHDOG_LIVEDUMP,
0x000001A2,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1a2--win32k-callout-watchdog-bugcheck,WIN32K_CALLOUT_WATCHDOG_BUGCHECK,
0x000001A3,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1a3--call-has-not-returned-watchdog-timeout-livedump,CALL_HAS_NOT_RETURNED_WATCHDOG_TIMEOUT_LIVEDUMP,
0x000001A4,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1a4--drips-sw-hw-divergence-livedump,DRIPS_SW_HW_DIVERGENCE_LIVEDUMP,The DRIPS_SW_HW_DIVERGENCE_LIVEDUMP live dump has a value of 0x000001A4.
0x000001A5,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1a5--usb-drips-blocker-surprise-removal-livedump,USB_DRIPS_BLOCKER_SURPRISE_REMOVAL_LIVEDUMP,The USB_DRIPS_BLOCKER_SURPRISE_REMOVAL_LIVEDUMP bug check has a value of 0x000001A5. It indicates that a USB device will be surprise removed because it is blocking DRIPS.
0x000001A6,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1a6--bluetooth-error-recovery-livedump,BLUETOOTH_ERROR_RECOVERY_LIVEDUMP,The BLUETOOTH_ERROR_RECOVERY_LIVEDUMP bug check has a value of 0x000001A6. It indicates that the Bluetooth radio driver (bthport.sys) has initiated error recovery to attempt to recover and reset the radio from an irremediable internal condition.
0x000001A7,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1a7--smb-redirector-livedump,SMB_REDIRECTOR_LIVEDUMP,The SMB_REDIRECTOR_LIVEDUMP bug check has a value of 0x000001A7. It indicates that the SMB redirector has detected a problem and has captured a kernel dump to collect debug information.
0x000001A8,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1a8--video-dxgkrnl-black-screen-livedump,VIDEO_DXGKRNL_BLACK_SCREEN_LIVEDUMP,The VIDEO_DXGKRNL_BLACK_SCREEN_LIVEDUMP bug check has a value of 0x000001A8. It indicates that a user initiated DXGKRNL live dump for black screen scenarios has occurred.
0x000001B0,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1b0--video-miniport-failed-livedump,VIDEO_MINIPORT_FAILED_LIVEDUMP,The VIDEO_MINIPORT_FAILED_LIVEDUMP bug check has a value of 0x000001B0.
0x000001B8,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1b8--video-miniport-black-screen-livedump,VIDEO_MINIPORT_BLACK_SCREEN_LIVEDUMP,The VIDEO_MINIPORT_BLACK_SCREEN_LIVEDUMP bug check has a value of 0x000001B8. It indicates that a user initiated MINIPORT live dump for black screen scenarios has occurred.
0x000001C4,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1c4--driver-verifier-detected-violation-livedump,DRIVER_VERIFIER_DETECTED_VIOLATION_LIVEDUMP,"The DRIVER_VERIFIER_DETECTED_VIOLATION_LIVEDUMP bug check has a value of 0x000001C4. This indicates that a device driver attempting to corrupt the system has been detected. This is because the driver was specified in the registry as being suspect (by the administrator) and the kernel has enabled substantial checking of this driver. For more information, see <a href=""https://docs.microsoft.com/windows-hardware/drivers/devtest/driver-verifier"" data-linktype=""external"">Driver Verifier</a>."
0x000001C5,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1c5--io-threadpool-deadlock-livedump,IO_THREADPOOL_DEADLOCK_LIVEDUMP,The IO_THREADPOOL_DEADLOCK_LIVEDUMP bug check has a value of 0x000001C5. This indicates a kernel mode threadpool encountered a deadlock situation.
0x000001C6,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1c6--fast-eresource-precondition-violation,FAST_ERESOURCE_PRECONDITION_VIOLATION,The FAST_ERESOURCE_PRECONDITION_VIOLATION bug check has a value of 0x000001C6. It indicates that a current thread is performing an invalid call to a fast resource routine.
0x000001C7,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1c7--store-data-structure-corruption,STORE_DATA_STRUCTURE_CORRUPTION,The STORE_DATA_STRUCTURE_CORRUPTION bug check has a value of 0x000001C7. It indicates that the store component detected a corruption in its data structures.
0x000001C8,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1c8--manually-initiated-power-button-hold,MANUALLY_INITIATED_POWER_BUTTON_HOLD,The MANUALLY_INITIATED_POWER_BUTTON_HOLD has a value of  0x000001C8.
0x000001C9,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1c9--user-mode-health-monitor-livedump,USER_MODE_HEALTH_MONITOR_LIVEDUMP,The USER_MODE_HEALTH_MONITOR_LIVEDUMP bug check has a value of 0x000001C9. It indicates that one or more critical user mode components failed to satisfy a health check.
0x000001CA,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1ca--synthetic-watchdog-timeout,SYNTHETIC_WATCHDOG_TIMEOUT,The SYNTHETIC_WATCHDOG_TIMEOUT bug check has a value of 0x000001CA. A system wide watchdog has expired. This indicates that the system is hung and not processing timer ticks.
0x000001CB,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1cb--invalid-silo-detach,INVALID_SILO_DETACH,The INVALID_SILO_DETACH bug check has a value of 0x000001CB. It indicates that a thread failed to detach from a silo before exiting.
0x000001CC,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1cc--exresource-timeout-livedump,EXRESOURCE_TIMEOUT_LIVEDUMP,
0x000001CD,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1cd--invalid-callback-stack-address,INVALID_CALLBACK_STACK_ADDRESS,
0x000001CE,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1ce--invalid-kernel-stack-address,INVALID_KERNEL_STACK_ADDRESS,
0x000001CF,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1cf--hardware-watchdog-timeout,HARDWARE_WATCHDOG_TIMEOUT,
0x000001D0,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1d0--acpi-firmware-watchdog-timeout,CPI_FIRMWARE_WATCHDOG_TIMEOUT,
0x000001D1,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1d1--telemetry-asserts-livedump,TELEMETRY_ASSERTS_LIVEDUMP,
0x000001D2,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1d2--worker-thread-invalid-state,WORKER_THREAD_INVALID_STATE,
0x000001D3,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1d3--wfp-invalid-operation,WFP_INVALID_OPERATION,
0x000001D4,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1d4--ucmusci-livedump,UCMUCSI_LIVEDUMP,
0x000001D5,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1d5--driver-pnp-watchdog,DRIVER_PNP_WATCHDOG,The DRIVER_PNP_WATCHDOG bug check has a value of 0x000001D5. This indicates that a driver has failed to complete a PnP operation within a specific time.
0x000001D6,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1d6--worker-thread-returned-with-non-default-workload-class,WORKER_THREAD_RETURNED_WITH_NON_DEFAULT_WORKLOAD_CLASS,The WORKER_THREAD_RETURNED_WITH_NON_DEFAULT_WORKLOAD_CLASS bug check has a value of 0x000001D6. It indicates that a worker thread changed its workload class and did not revert it before returning.
0x000001D7,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1d7--efs-fatal-error,EFS_FATAL_ERROR,The EFS_FATAL_ERROR bug check has a value of 0x000001D7. It indicates that an EFS error condition has occured such that cannot be handled without data loss or data corruption.
0x000001D8,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1d8--ucmucsi-failure,UCMUCSI_FAILURE,The UCMUCSI_FAILURE bug check has a value of 0x000001D8. It indicates that the UCSI class extension has encountered an error.
0x000001D9,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1d8--ucmucsi-failure,HAL_IOMMU_INTERNAL_ERROR,
0x000001DA,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1da--hal-blocked-processor-internal-error,HAL_BLOCKED_PROCESSOR_INTERNAL_ERROR,
0x000001DB,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1db--ipi-watchdog-timeout,IPI_WATCHDOG_TIMEOUT,The IPI_WATCHDOG_TIMEOUT bug check has a value of 0x000001DB. It indicates that a processor has been stuck in an IPI loop for more than the allowed time.
0x000001DC,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1dc--dma-common-buffer-vector-error,DMA_COMMON_BUFFER_VECTOR_ERROR,The DMA_COMMON_BUFFER_VECTOR_ERROR bug check has a value of 0x000001DC. It indicates that a driver has misused the DMA vectored common buffer APIs.
0x00000356,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x356--xbox-eractrl-cs-timeout,XBOX_ERACTRL_CS_TIMEOUT,
0x00000BFE,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xbfe--bc-bluetooth-verifier-fault,BC_BLUETOOTH_VERIFIER_FAULT,The BC_BLUETOOTH_VERIFIER_FAULT bug check has a value of 0x00000BFE. This indicates that a driver has caused a violation.
0x00000BFF,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xbff--bc-bthmini-verifier-fault,BC_BTHMINI_VERIFIER_FAULT,The BC_BTHMINI_VERIFIER_FAULT bug check has a value of 0x00000BFF. This indicates that The Bluetooth miniport extensible driver verifier has caught a violation.
0x00020001,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x20001--hypervisor-error,HYPERVISOR_ERROR,The HYPERVISOR_ERROR bug check has a value of 0x00020001. This indicates that the hypervisor has encountered a fatal error.
0x1000007E,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1000007e--system-thread-exception-not-handled-m,SYSTEM_THREAD_EXCEPTION_NOT_HANDLED_M,The SYSTEM_THREAD_EXCEPTION_NOT_HANDLED_M bug check has a value of 0x1000007E. This indicates that a system thread generated an exception which the error handler did not catch.
0x1000007F,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1000007f--unexpected-kernel-mode-trap-m,UNEXPECTED_KERNEL_MODE_TRAP_M,The UNEXPECTED_KERNEL_MODE_TRAP_M bug check has a value of 0x1000007F. This indicates that a trap was generated by the Intel CPU and the kernel failed to catch this trap.
0x1000008E,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x1000008e--kernel-mode-exception-not-handled-m,KERNEL_MODE_EXCEPTION_NOT_HANDLED_M,The KERNEL_MODE_EXCEPTION_NOT_HANDLED_M bug check has a value of 0x1000008E. This indicates that a kernel-mode program generated an exception which the error handler did not catch.
0x100000EA,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x100000ea--thread-stuck-in-device-driver-m,THREAD_STUCK_IN_DEVICE_DRIVER_M,The THREAD_STUCK_IN_DEVICE_DRIVER_M bug check has a value of 0x100000EA. This indicates that a thread in a device driver is endlessly spinning.
0x4000008A,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0x4000008a--thread-terminate-held-mutex,THREAD_TERMINATE_HELD_MUTEX,"The THREAD_TERMINATE_HELD_MUTEX bug check has a value of 0x4000008A. This indicates that a driver acquired a mutex on a thread that exited before the mutex could be released. This can be caused by a driver returning to user mode without releasing a mutex or by a driver acquiring a mutex and then causing an exception that results in the thread it is running on, being terminated."
0xC0000218,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xc0000218--status-cannot-load-registry-file,STATUS_CANNOT_LOAD_REGISTRY_FILE,The STATUS_CANNOT_LOAD_REGISTRY_FILE bug check has a value of 0xC0000218. This indicates that a registry file could not be loaded.
0xC000021A,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xc000021a--winlogin-fatal-error,WINLOGON_FATAL_ERROR,The WINLOGON_FATAL_ERROR bug check has a value of 0xC000021A. This means that that the Winlogon process terminated unexpectedly.
0xC0000221,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xc0000221--status-image-checksum-mismatch,STATUS_IMAGE_CHECKSUM_MISMATCH,The STATUS_IMAGE_CHECKSUM_MISMATCH bug check has a value of 0xC0000221. This indicates that a driver or a system DLL has been corrupted.
0xDEADDEAD,https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/bug-check-0xdeaddead--manually-initiated-crash1,MANUALLY_INITIATED_CRASH1,The MANUALLY_INITIATED_CRASH1 bug check has a value of 0xDEADDEAD. This indicates that the a manually initiated crash occurred.